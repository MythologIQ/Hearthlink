#!/bin/bash\n\n# Hearthlink Launch Script for Unix/Linux/macOS\n# AI Orchestration Hub\n\nset -e\n\n# Colors for output\nRED='\\033[0;31m'\nGREEN='\\033[0;32m'\nYELLOW='\\033[1;33m'\nBLUE='\\033[0;34m'\nNC='\\033[0m' # No Color\n\necho -e \"${BLUE}\"\necho \"================================\"\necho \"    HEARTHLINK LAUNCH SYSTEM\"\necho \"================================\"\necho -e \"${NC}\"\necho\n\n# Check if Node.js is installed\nif ! command -v node &> /dev/null; then\n    echo -e \"${RED}ERROR: Node.js is not installed${NC}\"\n    echo \"Please install Node.js from https://nodejs.org/\"\n    exit 1\nfi\n\n# Check if npm is available\nif ! command -v npm &> /dev/null; then\n    echo -e \"${RED}ERROR: npm is not available${NC}\"\n    echo \"Please ensure npm is installed with Node.js\"\n    exit 1\nfi\n\necho -e \"${GREEN}[INFO] Node.js and npm detected${NC}\"\necho \"Node.js version: $(node --version)\"\necho \"npm version: $(npm --version)\"\necho\n\n# Navigate to script directory\ncd \"$(dirname \"$0\")\"\necho -e \"${GREEN}[INFO] Working directory: $(pwd)${NC}\"\necho\n\n# Check if package.json exists\nif [ ! -f \"package.json\" ]; then\n    echo -e \"${RED}ERROR: package.json not found${NC}\"\n    echo \"Please run this script from the Hearthlink project root\"\n    exit 1\nfi\n\n# Install dependencies if node_modules doesn't exist\nif [ ! -d \"node_modules\" ]; then\n    echo -e \"${YELLOW}[INFO] Installing dependencies...${NC}\"\n    if npm install; then\n        echo -e \"${GREEN}[SUCCESS] Dependencies installed${NC}\"\n    else\n        echo -e \"${RED}ERROR: Failed to install dependencies${NC}\"\n        exit 1\n    fi\n    echo\nfi\n\n# Check if build directory exists, create if needed\nif [ ! -d \"build\" ]; then\n    echo -e \"${YELLOW}[INFO] Build directory not found, creating production build...${NC}\"\n    echo -e \"${YELLOW}[WARNING] This may take a few minutes...${NC}\"\n    \n    # Try to build, but handle permission errors\n    if npm run build; then\n        echo -e \"${GREEN}[SUCCESS] Production build created${NC}\"\n    else\n        echo -e \"${YELLOW}[WARNING] Build failed, will attempt to run in development mode${NC}\"\n        echo -e \"${YELLOW}[INFO] Starting Hearthlink in development mode...${NC}\"\n        echo\n        \n        # Start in development mode\n        echo -e \"${GREEN}[INFO] Starting React development server...${NC}\"\n        npm run start:dev &\n        \n        # Wait for React server to start\n        sleep 10\n        \n        # Start Electron\n        echo -e \"${GREEN}[INFO] Starting Electron application...${NC}\"\n        npm run electron-dev\n        \n        exit 0\n    fi\n    echo\nelse\n    echo -e \"${GREEN}[INFO] Build directory found${NC}\"\nfi\n\n# Launch Hearthlink\necho -e \"${GREEN}[INFO] Launching Hearthlink...${NC}\"\necho\necho -e \"${BLUE}\"\necho \"================================\"\necho \"    HEARTHLINK STARTING...\"\necho \"================================\"\necho -e \"${NC}\"\necho\necho \"Features Available:\"\necho \"  * Alden AI Orchestrator\"\necho \"  * Project Command System\"\necho \"  * Synapse Gateway\"\necho \"  * Core Orchestration\"\necho \"  * StarCraft UI Theme\"\necho \"  * Memory & Learning System\"\necho\necho \"Press Ctrl+C to stop Hearthlink\"\necho\n\n# Start Electron\nnpm start\n\necho\necho -e \"${BLUE}\"\necho \"================================\"\necho \"    HEARTHLINK SHUTDOWN\"\necho \"================================\"\necho -e \"${NC}\"\necho\necho \"Thank you for using Hearthlink!\"\necho