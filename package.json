{
  "name": "Hearthlink",
  "version": "1.3.0",
  "description": "Advanced AI Orchestration System with Plugin Architecture",
  "main": "electron/main.js",
  "homepage": "./",
  "scripts": {
    "start": "electron .",
    "start:react": "cross-env PORT=3005 react-scripts start",
    "start:electron": "electron .",
    "dev": "concurrently \"npm run start:react\" \"npx wait-on http://localhost:3005 && npm run start:electron\"",
    "dev:react": "cross-env PORT=3005 BROWSER=none react-scripts start",
    "launch": "npm run dev",
    "dev:enhanced": "concurrently \"npm run start:react\" \"npx wait-on http://localhost:3005 && npm run start:electron\" \"node start-hearthlink-clean.js\"",
    "config": "electron dev-launch.js",
    "react-start": "react-scripts start",
    "build": "react-scripts build",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "eject": "react-scripts eject",
    "electron-pack": "npm run build && electron-builder",
    "electron-dev": "electron .",
    "dist": "npm run build && electron-builder --publish=never",
    "dist-win": "npm run build && electron-builder --win --publish=never",
    "dist-msi": "npm run build && electron-builder --win msi --publish=never",
    "test:launcher": "node test_native_launcher.js",
    "test:ports": "node -e \"console.log('Port management test completed. Use npm run test:launcher for detailed testing.')\"",
    "build:exe": "cross-env CI=false npm run build && electron-builder --win --publish=never",
    "build:exe-portable": "npm run build && electron-builder --win portable --publish=never",
    "create-executable": "npm run build:exe && npm run copy-executable",
    "copy-executable": "node -e \"const fs=require('fs'); const path=require('path'); if(fs.existsSync('dist')) { const files=fs.readdirSync('dist'); const exe=files.find(f=>f.endsWith('.exe')); if(exe) { fs.copyFileSync(path.join('dist',exe), 'hearthlink.exe'); console.log('✅ hearthlink.exe created in root folder'); } else { console.log('❌ No .exe file found in dist folder'); } } else { console.log('❌ dist folder not found'); }\"",
    "test:e2e": "playwright test tests/e2e",
    "test:e2e:headed": "playwright test tests/e2e --headed",
    "test:e2e:debug": "playwright test tests/e2e --debug",
    "start:static": "node -e \"const express = require('express'); const app = express(); app.use(express.static('build')); app.listen(3008, () => console.log('Static server on port 3008'));\"",
    "start:react-fixed": "cross-env PORT=3015 BROWSER=none react-scripts start",
    "start:react-simple": "node start-react-simple.js",
    "dev:fixed": "concurrently \"npm run start:react-fixed\" \"npx wait-on http://localhost:3015 && npm run start:electron\"",
    "tauri": "tauri",
    "tauri:dev": "tauri dev",
    "tauri:build": "tauri build",
    "tauri:build:debug": "tauri build --debug",
    "native": "tauri dev",
    "native:build": "tauri build",
    "native:build:msi": "tauri build --target x86_64-pc-windows-msvc --bundles msi",
    "native:build:exe": "tauri build --target x86_64-pc-windows-msvc --bundles nsis",
    "compile:ts": "tsc --noEmit",
    "python:install": "node scripts/setup_python_requirements.js",
    "python:verify": "python -c \"import fastapi, uvicorn, pydantic, requests; print('✅ Python environment OK')\"",
    "setup:all": "npm install && npm run python:install",
    "build:complete": "npm run setup:all && npm run tauri:build",
    "verify:setup": "node scripts/verify_tauri_setup.js",
    "postinstall": "node scripts/verify_tauri_setup.js"
  },
  "build": {
    "appId": "com.hearthlink.app",
    "productName": "Hearthlink",
    "directories": {
      "output": "dist"
    },
    "files": [
      "build/**/*",
      "main.js",
      "launcher.js",
      "preload.js",
      "src/utils/**/*",
      "assets/**/*",
      "docs/public/**/*",
      "voice/**/*",
      "LICENSE",
      "README.md",
      "SBOM.json",
      "SECURITY.md",
      "node_modules/**/*"
    ],
    "extraResources": [
      {
        "from": "docs/public",
        "to": "docs/public"
      },
      {
        "from": "voice",
        "to": "voice"
      },
      {
        "from": "assets",
        "to": "assets"
      }
    ],
    "win": {
      "target": [
        {
          "target": "nsis",
          "arch": [
            "x64"
          ]
        }
      ],
      "icon": "public/favicon.ico",
      "artifactName": "Hearthlink-v1.3.0.exe",
      "publisherName": "Hearthlink Development Team",
      "verifyUpdateCodeSignature": false
    },
    "msi": {
      "oneClick": false,
      "createDesktopShortcut": true,
      "createStartMenuShortcut": true,
      "shortcutName": "Hearthlink",
      "artifactName": "HearthlinkSetup-v1.3.0.msi"
    },
    "nsis": {
      "oneClick": false,
      "allowToChangeInstallationDirectory": true,
      "createDesktopShortcut": true,
      "createStartMenuShortcut": true,
      "shortcutName": "Hearthlink",
      "uninstallDisplayName": "Hearthlink",
      "artifactName": "Hearthlink-Setup-v1.3.0.exe"
    }
  },
  "dependencies": {
    "concurrently": "^8.2.2",
    "lucide-react": "^0.263.1",
    "node-fetch": "^3.3.2",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-scripts": "5.0.1"
  },
  "devDependencies": {
    "@babel/eslint-parser": "^7.28.0",
    "@eslint/js": "^9.31.0",
    "@playwright/test": "^1.40.0",
    "@types/react": "^18.2.0",
    "@types/react-dom": "^18.2.0",
    "@tauri-apps/cli": "^2.0.0",
    "cross-env": "^7.0.3",
    "electron": "^28.0.0",
    "electron-builder": "^24.9.1",
    "eslint": "^8.57.1",
    "eslint-plugin-react": "^7.37.5",
    "globals": "^16.3.0",
    "playwright": "^1.40.0",
    "typescript": "^4.9.5",
    "typescript-eslint": "^8.37.0",
    "wait-on": "^7.2.0",
    "jest": "^29.7.0",
    "@jest/globals": "^29.7.0",
    "ts-jest": "^29.1.1",
    "babel-jest": "^29.7.0"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "author": "Hearthlink Development Team",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/WulfForge/Hearthlink.git"
  },
  "keywords": [
    "ai",
    "productivity",
    "voice-commands",
    "accessibility",
    "adhd-support",
    "desktop-app"
  ]
}