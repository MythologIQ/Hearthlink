"use strict";
globalThis["webpackHotUpdateHearthlink"]("main",{

/***/ "./src/components/SynapseGateway.js":
/*!******************************************!*\
  !*** ./src/components/SynapseGateway.js ***!
  \******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _SynapseGateway_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SynapseGateway.css */ "./src/components/SynapseGateway.css");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "G:\\mythologiq\\hearthlink\\src\\components\\SynapseGateway.js",
  _s = __webpack_require__.$Refresh$.signature();



const SynapseGateway = ({
  accessibilitySettings,
  onVoiceCommand
}) => {
  _s();
  const [synapseStatus, setSynapseStatus] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({
    gateway: 'initializing',
    plugins: 0,
    connections: 0,
    security: 'monitoring',
    traffic: 'low'
  });
  const [activeConnections, setActiveConnections] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [pluginRegistry, setPluginRegistry] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [securityLogs, setSecurityLogs] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [trafficMetrics, setTrafficMetrics] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({
    requests_per_minute: 0,
    bandwidth_usage: 0,
    error_rate: 0,
    response_time: 0
  });
  const [apiConfigurations, setApiConfigurations] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({
    hearthlink_api: {
      status: 'checking',
      endpoint: 'http://192.168.0.29:8080/api',
      rate_limit: 'unlimited',
      last_test: null
    },
    google_gemini: {
      status: 'not_configured',
      endpoint: 'https://generativelanguage.googleapis.com/v1beta',
      rate_limit: '60/min',
      last_test: null
    },
    openai: {
      status: 'not_configured',
      endpoint: 'https://api.openai.com/v1',
      rate_limit: 'none',
      last_test: null
    },
    anthropic: {
      status: 'not_configured',
      endpoint: 'https://api.anthropic.com/v1',
      rate_limit: 'none',
      last_test: null
    },
    kimi_k2: {
      status: 'not_configured',
      endpoint: 'https://openrouter.ai/api/v1',
      model: 'moonshotai/kimi-k2',
      rate_limit: 'variable',
      last_test: null,
      features: ['128K context', 'Tool calling', 'Agentic workflows', 'Code generation'],
      cost_per_1k_tokens: {
        input: 0.57,
        output: 2.30
      }
    }
  });
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    initializeSynapse();
    const statusInterval = setInterval(updateSynapseStatus, 5000);
    return () => clearInterval(statusInterval);
  }, []);
  const initializeSynapse = async () => {
    addSecurityLog('SYNAPSE_INIT', 'Initializing Synapse Gateway...', 'info');

    // Check real API connections
    await checkHearthlinkAPI();
    await checkExternalAPIs();
    await checkClaudeCodeCLI();
    setSynapseStatus({
      gateway: 'online',
      plugins: 4,
      connections: activeConnections.length,
      security: 'secured',
      traffic: 'monitoring'
    });

    // Load real plugin registry
    loadPluginRegistry();
    addSecurityLog('SYNAPSE_ONLINE', 'Synapse Gateway fully operational', 'success');
  };
  const checkHearthlinkAPI = async () => {
    try {
      addSecurityLog('API_CHECK', 'Testing Hearthlink REST API...', 'info');
      const response = await fetch('http://192.168.0.29:8080/api/health');
      if (response.ok) {
        const healthData = await response.json();
        setApiConfigurations(prev => ({
          ...prev,
          hearthlink_api: {
            ...prev.hearthlink_api,
            status: 'configured',
            last_test: new Date().toISOString()
          }
        }));
        addSecurityLog('API_SUCCESS', `Hearthlink API online - ${healthData.status}`, 'success');
        await loadHearthlinkData();
      } else {
        throw new Error(`HTTP ${response.status}`);
      }
    } catch (error) {
      setApiConfigurations(prev => ({
        ...prev,
        hearthlink_api: {
          ...prev.hearthlink_api,
          status: 'error',
          last_test: new Date().toISOString()
        }
      }));
      addSecurityLog('API_ERROR', `Hearthlink API offline - ${error.message}`, 'error');
    }
  };
  const loadHearthlinkData = async () => {
    try {
      var _agentsData$agents, _tokensData$tokens;
      // Load agents
      const agentsResponse = await fetch('http://192.168.0.29:8080/api/agents');
      const agentsData = await agentsResponse.json();

      // Load tokens  
      const tokensResponse = await fetch('http://192.168.0.29:8080/api/tokens');
      const tokensData = await tokensResponse.json();

      // Create real connections from API data
      const connections = [];
      if (agentsData.agents) {
        agentsData.agents.forEach(agent => {
          connections.push({
            id: `agent_${agent.id.substring(0, 8)}`,
            agent: agent.name,
            type: 'AGENT_API',
            status: 'active',
            started: agent.created_at,
            requests: Math.floor(Math.random() * 50) + 10,
            bandwidth: `${(Math.random() * 2).toFixed(1)}MB`
          });
        });
      }
      if (tokensData.tokens) {
        connections.push({
          id: 'token_pool',
          agent: `${tokensData.tokens.length} Active Tokens`,
          type: 'AUTH_POOL',
          status: 'active',
          started: new Date().toISOString(),
          requests: tokensData.tokens.reduce((sum, token) => sum + Math.floor(Math.random() * 20), 0),
          bandwidth: '0.5MB'
        });
      }
      setActiveConnections(connections);
      addSecurityLog('DATA_LOADED', `Loaded ${((_agentsData$agents = agentsData.agents) === null || _agentsData$agents === void 0 ? void 0 : _agentsData$agents.length) || 0} agents, ${((_tokensData$tokens = tokensData.tokens) === null || _tokensData$tokens === void 0 ? void 0 : _tokensData$tokens.length) || 0} tokens`, 'info');
    } catch (error) {
      addSecurityLog('DATA_ERROR', 'Failed to load Hearthlink data', 'warning');
    }
  };
  const checkExternalAPIs = async () => {
    // Check Gemini API if key is available
    const geminiKey = ({"NODE_ENV":"development","PUBLIC_URL":"","WDS_SOCKET_HOST":undefined,"WDS_SOCKET_PATH":undefined,"WDS_SOCKET_PORT":undefined,"FAST_REFRESH":true,"REACT_APP_CLAUDE_CODE":"true","REACT_APP_ENV":"development","REACT_APP_HEARTHLINK_API":"http://192.168.0.29:8080/api"}).REACT_APP_GEMINI_API_KEY;
    if (geminiKey) {
      try {
        addSecurityLog('API_CHECK', 'Testing Google Gemini API...', 'info');

        // Test Gemini API with a simple request
        const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models?key=${geminiKey}`);
        if (response.ok) {
          setApiConfigurations(prev => ({
            ...prev,
            google_gemini: {
              ...prev.google_gemini,
              status: 'configured',
              last_test: new Date().toISOString()
            }
          }));
          addSecurityLog('API_SUCCESS', 'Google Gemini API authenticated', 'success');
        } else {
          throw new Error(`HTTP ${response.status}`);
        }
      } catch (error) {
        setApiConfigurations(prev => ({
          ...prev,
          google_gemini: {
            ...prev.google_gemini,
            status: 'error',
            last_test: new Date().toISOString()
          }
        }));
        addSecurityLog('API_ERROR', `Gemini API test failed - ${error.message}`, 'error');
      }
    } else {
      addSecurityLog('CONFIG_MISSING', 'Gemini API key not configured', 'warning');
    }
  };
  const checkClaudeCodeCLI = async () => {
    try {
      addSecurityLog('CLI_CHECK', 'Detecting Claude Code CLI integration...', 'info');

      // Check if we're running in Claude Code environment
      const isClaudeCode = window.navigator.userAgent.includes('claude-code') || "true" === 'true' || 0;
      if (isClaudeCode) {
        setApiConfigurations(prev => ({
          ...prev,
          claude_code_cli: {
            status: 'configured',
            endpoint: 'claude-code://cli',
            rate_limit: 'unlimited',
            last_test: new Date().toISOString()
          }
        }));
        setActiveConnections(prev => [...prev, {
          id: 'claude_code_cli',
          agent: 'Claude Code CLI',
          type: 'CLI_INTEGRATION',
          status: 'active',
          started: new Date().toISOString(),
          requests: 1,
          bandwidth: 'N/A'
        }]);
        addSecurityLog('CLI_SUCCESS', 'Claude Code CLI integration active', 'success');
      } else {
        addSecurityLog('CLI_INFO', 'Claude Code CLI not detected', 'info');
      }
    } catch (error) {
      addSecurityLog('CLI_ERROR', `CLI detection failed - ${error.message}`, 'warning');
    }
  };
  const loadPluginRegistry = () => {
    var _apiConfigurations$he, _apiConfigurations$he2, _apiConfigurations$go, _apiConfigurations$go2, _apiConfigurations$ki, _apiConfigurations$ki2;
    const plugins = [{
      id: 'hearthlink_core',
      name: 'Hearthlink REST API',
      version: '1.0.0',
      status: ((_apiConfigurations$he = apiConfigurations.hearthlink_api) === null || _apiConfigurations$he === void 0 ? void 0 : _apiConfigurations$he.status) === 'configured' ? 'active' : 'inactive',
      risk_tier: 'low',
      permissions: ['agent_management', 'token_generation', 'system_access'],
      last_used: ((_apiConfigurations$he2 = apiConfigurations.hearthlink_api) === null || _apiConfigurations$he2 === void 0 ? void 0 : _apiConfigurations$he2.last_test) || new Date().toISOString()
    }, {
      id: 'google_ai_plugin',
      name: 'Google Gemini AI',
      version: '1.2.0',
      status: ((_apiConfigurations$go = apiConfigurations.google_gemini) === null || _apiConfigurations$go === void 0 ? void 0 : _apiConfigurations$go.status) === 'configured' ? 'active' : 'inactive',
      risk_tier: 'medium',
      permissions: ['external_api', 'ai_processing', 'data_transmission'],
      last_used: (_apiConfigurations$go2 = apiConfigurations.google_gemini) === null || _apiConfigurations$go2 === void 0 ? void 0 : _apiConfigurations$go2.last_test
    }, {
      id: 'file_ops_plugin',
      name: 'File Operations',
      version: '1.0.0',
      status: 'active',
      risk_tier: 'low',
      permissions: ['file_system', 'data_processing'],
      last_used: new Date(Date.now() - 900000).toISOString()
    }, {
      id: 'kimi_k2_plugin',
      name: 'Kimi K2 Agentic AI',
      version: '1.0.0',
      status: ((_apiConfigurations$ki = apiConfigurations.kimi_k2) === null || _apiConfigurations$ki === void 0 ? void 0 : _apiConfigurations$ki.status) === 'configured' ? 'active' : 'inactive',
      risk_tier: 'medium',
      permissions: ['external_api', 'ai_processing', 'tool_calling', 'agentic_workflows'],
      last_used: (_apiConfigurations$ki2 = apiConfigurations.kimi_k2) === null || _apiConfigurations$ki2 === void 0 ? void 0 : _apiConfigurations$ki2.last_test,
      features: ['128K Context', 'Tool Calling', 'Autonomous Tasks', 'Code Generation'],
      cost_effective: true
    }];

    // Add Claude Code CLI plugin if detected
    if (apiConfigurations.claude_code_cli) {
      plugins.push({
        id: 'claude_code_cli',
        name: 'Claude Code CLI',
        version: '2.0.0',
        status: 'active',
        risk_tier: 'low',
        permissions: ['cli_access', 'development_tools', 'code_analysis'],
        last_used: new Date().toISOString()
      });
    }
    setPluginRegistry(plugins);
  };
  const updateSynapseStatus = () => {
    // Simulate real-time metrics updates
    setTrafficMetrics(prev => ({
      requests_per_minute: Math.floor(Math.random() * 30) + 10,
      bandwidth_usage: Math.floor(Math.random() * 1000) + 500,
      error_rate: Math.random() * 2,
      response_time: Math.floor(Math.random() * 200) + 150
    }));

    // Random security events
    if (Math.random() < 0.1) {
      const events = [{
        type: 'ACCESS_GRANTED',
        message: 'Plugin execution authorized',
        level: 'info'
      }, {
        type: 'RATE_LIMIT',
        message: 'Rate limit threshold reached for Google AI',
        level: 'warning'
      }, {
        type: 'SECURITY_SCAN',
        message: 'Periodic security scan completed',
        level: 'info'
      }];
      const event = events[Math.floor(Math.random() * events.length)];
      addSecurityLog(event.type, event.message, event.level);
    }
  };
  const addSecurityLog = (type, message, level) => {
    const logEntry = {
      id: Date.now(),
      timestamp: new Date().toISOString(),
      type,
      message,
      level
    };
    setSecurityLogs(prev => [logEntry, ...prev].slice(0, 50));
  };
  const testApiConnection = async apiName => {
    addSecurityLog('API_TEST', `Testing ${apiName} connection...`, 'info');
    setApiConfigurations(prev => ({
      ...prev,
      [apiName]: {
        ...prev[apiName],
        status: 'testing'
      }
    }));
    try {
      let isSuccess = false;
      switch (apiName) {
        case 'hearthlink_api':
          const healthResponse = await fetch('http://192.168.0.29:8080/api/health');
          isSuccess = healthResponse.ok;
          if (isSuccess) {
            await loadHearthlinkData();
          }
          break;
        case 'google_gemini':
          const geminiKey = ({"NODE_ENV":"development","PUBLIC_URL":"","WDS_SOCKET_HOST":undefined,"WDS_SOCKET_PATH":undefined,"WDS_SOCKET_PORT":undefined,"FAST_REFRESH":true,"REACT_APP_CLAUDE_CODE":"true","REACT_APP_ENV":"development","REACT_APP_HEARTHLINK_API":"http://192.168.0.29:8080/api"}).REACT_APP_GEMINI_API_KEY;
          if (geminiKey) {
            const geminiResponse = await fetch(`https://generativelanguage.googleapis.com/v1beta/models?key=${geminiKey}`);
            isSuccess = geminiResponse.ok;
          } else {
            throw new Error('API key not configured');
          }
          break;
        case 'claude_code_cli':
          // Test Claude Code CLI integration
          isSuccess = window.navigator.userAgent.includes('claude-code') || "true" === 'true';
          break;
        default:
          // For other APIs, simulate test
          await new Promise(resolve => setTimeout(resolve, 2000));
          isSuccess = Math.random() > 0.3;
      }
      setApiConfigurations(prev => ({
        ...prev,
        [apiName]: {
          ...prev[apiName],
          status: isSuccess ? 'configured' : 'error',
          last_test: new Date().toISOString()
        }
      }));
      addSecurityLog('API_TEST', `${apiName} connection test ${isSuccess ? 'successful' : 'failed'}`, isSuccess ? 'success' : 'error');
    } catch (error) {
      setApiConfigurations(prev => ({
        ...prev,
        [apiName]: {
          ...prev[apiName],
          status: 'error',
          last_test: new Date().toISOString()
        }
      }));
      addSecurityLog('API_ERROR', `${apiName} test failed: ${error.message}`, 'error');
    }
  };
  const executePlugin = async pluginId => {
    addSecurityLog('PLUGIN_EXEC', `Executing plugin: ${pluginId}`, 'info');
    setPluginRegistry(prev => prev.map(plugin => plugin.id === pluginId ? {
      ...plugin,
      status: 'executing',
      last_used: new Date().toISOString()
    } : plugin));

    // Simulate plugin execution
    await new Promise(resolve => setTimeout(resolve, 3000));
    setPluginRegistry(prev => prev.map(plugin => plugin.id === pluginId ? {
      ...plugin,
      status: 'active'
    } : plugin));
    addSecurityLog('PLUGIN_EXEC', `Plugin ${pluginId} execution completed`, 'success');
  };
  const getStatusColor = status => {
    const colors = {
      'online': '#00ff88',
      'active': '#00ccff',
      'configured': '#00ff88',
      'secured': '#00ff88',
      'monitoring': '#ffaa00',
      'testing': '#ffaa00',
      'executing': '#ffaa00',
      'standby': '#888888',
      'error': '#ff4444',
      'not_configured': '#ff6666',
      'initializing': '#aa88ff'
    };
    return colors[status] || '#888888';
  };
  const getRiskColor = risk => {
    const colors = {
      'low': '#00ff88',
      'medium': '#ffaa00',
      'high': '#ff6666',
      'critical': '#ff0000'
    };
    return colors[risk] || '#888888';
  };
  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
    className: "synapse-gateway",
    children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
      className: "synapse-header",
      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
        className: "header-title",
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("h1", {
          children: ["SYNAPSE ", /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("span", {
            className: "glow-text",
            children: "GATEWAY"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 465,
            columnNumber: 23
          }, undefined)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 465,
          columnNumber: 11
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          className: "header-subtitle",
          children: "Secure External Protocol Boundary"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 466,
          columnNumber: 11
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 464,
        columnNumber: 9
      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
        className: "gateway-status",
        children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          className: "status-indicator",
          children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("span", {
            className: "status-label",
            children: "GATEWAY:"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 470,
            columnNumber: 13
          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("span", {
            className: `status-value`,
            style: {
              color: getStatusColor(synapseStatus.gateway)
            },
            children: synapseStatus.gateway.toUpperCase()
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 471,
            columnNumber: 13
          }, undefined)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 469,
          columnNumber: 11
        }, undefined)
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 468,
        columnNumber: 9
      }, undefined)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 463,
      columnNumber: 7
    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
      className: "synapse-dashboard",
      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
        className: "dashboard-section overview-section",
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          className: "section-header",
          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("h2", {
            children: "\uD83D\uDD12 SYSTEM OVERVIEW"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 483,
            columnNumber: 13
          }, undefined)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 482,
          columnNumber: 11
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          className: "overview-grid",
          children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
            className: "overview-card",
            children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
              className: "card-header",
              children: "Gateway Status"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 488,
              columnNumber: 15
            }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
              className: "card-value",
              style: {
                color: getStatusColor(synapseStatus.gateway)
              },
              children: synapseStatus.gateway.toUpperCase()
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 489,
              columnNumber: 15
            }, undefined)]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 487,
            columnNumber: 13
          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
            className: "overview-card",
            children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
              className: "card-header",
              children: "Active Plugins"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 495,
              columnNumber: 15
            }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
              className: "card-value",
              children: synapseStatus.plugins
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 496,
              columnNumber: 15
            }, undefined)]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 494,
            columnNumber: 13
          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
            className: "overview-card",
            children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
              className: "card-header",
              children: "Connections"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 502,
              columnNumber: 15
            }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
              className: "card-value",
              children: synapseStatus.connections
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 503,
              columnNumber: 15
            }, undefined)]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 501,
            columnNumber: 13
          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
            className: "overview-card",
            children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
              className: "card-header",
              children: "Security"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 509,
              columnNumber: 15
            }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
              className: "card-value",
              style: {
                color: getStatusColor(synapseStatus.security)
              },
              children: synapseStatus.security.toUpperCase()
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 510,
              columnNumber: 15
            }, undefined)]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 508,
            columnNumber: 13
          }, undefined)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 486,
          columnNumber: 11
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 481,
        columnNumber: 9
      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
        className: "dashboard-section api-section",
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          className: "section-header",
          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("h2", {
            children: "\uD83D\uDD17 API CONFIGURATIONS"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 520,
            columnNumber: 13
          }, undefined)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 519,
          columnNumber: 11
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          className: "api-grid",
          children: Object.entries(apiConfigurations).map(([apiName, config]) => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
            className: "api-card",
            children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
              className: "api-header",
              children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
                className: "api-name",
                children: apiName.toUpperCase()
              }, void 0, false, {
                fileName: _jsxFileName,
                lineNumber: 527,
                columnNumber: 19
              }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
                className: "api-status",
                style: {
                  color: getStatusColor(config.status)
                },
                children: ["\u25CF ", config.status.toUpperCase()]
              }, void 0, true, {
                fileName: _jsxFileName,
                lineNumber: 528,
                columnNumber: 19
              }, undefined)]
            }, void 0, true, {
              fileName: _jsxFileName,
              lineNumber: 526,
              columnNumber: 17
            }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
              className: "api-details",
              children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
                className: "api-detail",
                children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("span", {
                  className: "detail-label",
                  children: "Endpoint:"
                }, void 0, false, {
                  fileName: _jsxFileName,
                  lineNumber: 535,
                  columnNumber: 21
                }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("span", {
                  className: "detail-value",
                  children: config.endpoint
                }, void 0, false, {
                  fileName: _jsxFileName,
                  lineNumber: 536,
                  columnNumber: 21
                }, undefined)]
              }, void 0, true, {
                fileName: _jsxFileName,
                lineNumber: 534,
                columnNumber: 19
              }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
                className: "api-detail",
                children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("span", {
                  className: "detail-label",
                  children: "Rate Limit:"
                }, void 0, false, {
                  fileName: _jsxFileName,
                  lineNumber: 540,
                  columnNumber: 21
                }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("span", {
                  className: "detail-value",
                  children: config.rate_limit
                }, void 0, false, {
                  fileName: _jsxFileName,
                  lineNumber: 541,
                  columnNumber: 21
                }, undefined)]
              }, void 0, true, {
                fileName: _jsxFileName,
                lineNumber: 539,
                columnNumber: 19
              }, undefined), config.last_test && /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
                className: "api-detail",
                children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("span", {
                  className: "detail-label",
                  children: "Last Test:"
                }, void 0, false, {
                  fileName: _jsxFileName,
                  lineNumber: 546,
                  columnNumber: 23
                }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("span", {
                  className: "detail-value",
                  children: new Date(config.last_test).toLocaleTimeString()
                }, void 0, false, {
                  fileName: _jsxFileName,
                  lineNumber: 547,
                  columnNumber: 23
                }, undefined)]
              }, void 0, true, {
                fileName: _jsxFileName,
                lineNumber: 545,
                columnNumber: 21
              }, undefined)]
            }, void 0, true, {
              fileName: _jsxFileName,
              lineNumber: 533,
              columnNumber: 17
            }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
              className: "api-actions",
              children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("button", {
                onClick: () => testApiConnection(apiName),
                disabled: config.status === 'testing',
                className: "test-btn",
                children: config.status === 'testing' ? 'TESTING...' : 'TEST CONNECTION'
              }, void 0, false, {
                fileName: _jsxFileName,
                lineNumber: 555,
                columnNumber: 19
              }, undefined), apiName === 'hearthlink_api' && config.status === 'configured' && /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("button", {
                onClick: () => window.open('/tokens', '_blank'),
                className: "manage-btn",
                style: {
                  marginLeft: '10px',
                  backgroundColor: 'rgba(34, 211, 238, 0.2)',
                  color: '#22d3ee',
                  border: '1px solid #22d3ee'
                },
                children: "MANAGE TOKENS"
              }, void 0, false, {
                fileName: _jsxFileName,
                lineNumber: 564,
                columnNumber: 21
              }, undefined)]
            }, void 0, true, {
              fileName: _jsxFileName,
              lineNumber: 554,
              columnNumber: 17
            }, undefined)]
          }, apiName, true, {
            fileName: _jsxFileName,
            lineNumber: 525,
            columnNumber: 15
          }, undefined))
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 523,
          columnNumber: 11
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 518,
        columnNumber: 9
      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
        className: "dashboard-section plugins-section",
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          className: "section-header",
          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("h2", {
            children: "\uD83D\uDD0C PLUGIN REGISTRY"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 586,
            columnNumber: 13
          }, undefined)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 585,
          columnNumber: 11
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          className: "plugins-list",
          children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
            className: "plugins-header",
            children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("span", {
              children: "Plugin"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 591,
              columnNumber: 15
            }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("span", {
              children: "Version"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 592,
              columnNumber: 15
            }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("span", {
              children: "Status"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 593,
              columnNumber: 15
            }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("span", {
              children: "Risk"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 594,
              columnNumber: 15
            }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("span", {
              children: "Actions"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 595,
              columnNumber: 15
            }, undefined)]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 590,
            columnNumber: 13
          }, undefined), pluginRegistry.map(plugin => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
            className: "plugin-row",
            children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
              className: "plugin-info",
              children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
                className: "plugin-name",
                children: plugin.name
              }, void 0, false, {
                fileName: _jsxFileName,
                lineNumber: 601,
                columnNumber: 19
              }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
                className: "plugin-permissions",
                children: plugin.permissions.map(perm => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("span", {
                  className: "permission-badge",
                  children: perm
                }, perm, false, {
                  fileName: _jsxFileName,
                  lineNumber: 604,
                  columnNumber: 23
                }, undefined))
              }, void 0, false, {
                fileName: _jsxFileName,
                lineNumber: 602,
                columnNumber: 19
              }, undefined)]
            }, void 0, true, {
              fileName: _jsxFileName,
              lineNumber: 600,
              columnNumber: 17
            }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("span", {
              className: "plugin-version",
              children: plugin.version
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 609,
              columnNumber: 17
            }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("span", {
              className: "plugin-status",
              style: {
                color: getStatusColor(plugin.status)
              },
              children: plugin.status.toUpperCase()
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 611,
              columnNumber: 17
            }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("span", {
              className: "plugin-risk",
              style: {
                color: getRiskColor(plugin.risk_tier)
              },
              children: plugin.risk_tier.toUpperCase()
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 615,
              columnNumber: 17
            }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
              className: "plugin-actions",
              children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("button", {
                onClick: () => executePlugin(plugin.id),
                disabled: plugin.status === 'executing',
                className: "execute-btn",
                children: plugin.status === 'executing' ? 'EXECUTING...' : 'EXECUTE'
              }, void 0, false, {
                fileName: _jsxFileName,
                lineNumber: 620,
                columnNumber: 19
              }, undefined)
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 619,
              columnNumber: 17
            }, undefined)]
          }, plugin.id, true, {
            fileName: _jsxFileName,
            lineNumber: 599,
            columnNumber: 15
          }, undefined))]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 589,
          columnNumber: 11
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 584,
        columnNumber: 9
      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
        className: "dashboard-section traffic-section",
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          className: "section-header",
          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("h2", {
            children: "\uD83D\uDCC8 TRAFFIC METRICS"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 636,
            columnNumber: 13
          }, undefined)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 635,
          columnNumber: 11
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          className: "traffic-grid",
          children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
            className: "metric-card",
            children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
              className: "metric-header",
              children: "Requests/Min"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 641,
              columnNumber: 15
            }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
              className: "metric-value",
              children: trafficMetrics.requests_per_minute
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 642,
              columnNumber: 15
            }, undefined)]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 640,
            columnNumber: 13
          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
            className: "metric-card",
            children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
              className: "metric-header",
              children: "Bandwidth (KB)"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 646,
              columnNumber: 15
            }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
              className: "metric-value",
              children: trafficMetrics.bandwidth_usage
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 647,
              columnNumber: 15
            }, undefined)]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 645,
            columnNumber: 13
          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
            className: "metric-card",
            children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
              className: "metric-header",
              children: "Error Rate (%)"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 651,
              columnNumber: 15
            }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
              className: "metric-value",
              children: trafficMetrics.error_rate.toFixed(2)
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 652,
              columnNumber: 15
            }, undefined)]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 650,
            columnNumber: 13
          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
            className: "metric-card",
            children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
              className: "metric-header",
              children: "Response Time (ms)"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 656,
              columnNumber: 15
            }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
              className: "metric-value",
              children: trafficMetrics.response_time
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 657,
              columnNumber: 15
            }, undefined)]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 655,
            columnNumber: 13
          }, undefined)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 639,
          columnNumber: 11
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 634,
        columnNumber: 9
      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
        className: "dashboard-section logs-section",
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          className: "section-header",
          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("h2", {
            children: "\uD83D\uDEE1\uFE0F SECURITY LOGS"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 665,
            columnNumber: 13
          }, undefined)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 664,
          columnNumber: 11
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          className: "logs-container",
          children: securityLogs.map(log => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
            className: `log-entry log-${log.level}`,
            children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("span", {
              className: "log-timestamp",
              children: new Date(log.timestamp).toLocaleTimeString()
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 671,
              columnNumber: 17
            }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("span", {
              className: "log-type",
              children: ["[", log.type, "]"]
            }, void 0, true, {
              fileName: _jsxFileName,
              lineNumber: 674,
              columnNumber: 17
            }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("span", {
              className: "log-message",
              children: log.message
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 675,
              columnNumber: 17
            }, undefined)]
          }, log.id, true, {
            fileName: _jsxFileName,
            lineNumber: 670,
            columnNumber: 15
          }, undefined))
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 668,
          columnNumber: 11
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 663,
        columnNumber: 9
      }, undefined)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 479,
      columnNumber: 7
    }, undefined)]
  }, void 0, true, {
    fileName: _jsxFileName,
    lineNumber: 461,
    columnNumber: 5
  }, undefined);
};
_s(SynapseGateway, "nACbtBBudfD9/Wbk8eAx3bwmMCo=");
_c = SynapseGateway;
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SynapseGateway);
var _c;
__webpack_require__.$Refresh$.register(_c, "SynapseGateway");

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("0e6c1319b40e7ab55d3e")
/******/ })();
/******/ 
/******/ }
);
//# sourceMappingURL=main.c8f42f4269b7a7ae797c.hot-update.js.map