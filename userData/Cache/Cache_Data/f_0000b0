"use strict";
globalThis["webpackHotUpdateHearthlink"]("main",{

/***/ "./src/components/AldenMainScreen.js":
/*!*******************************************!*\
  !*** ./src/components/AldenMainScreen.js ***!
  \*******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _AldenMainScreen_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AldenMainScreen.css */ "./src/components/AldenMainScreen.css");
/* harmony import */ var _panels_ObservatoryPanel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./panels/ObservatoryPanel */ "./src/components/panels/ObservatoryPanel.js");
/* harmony import */ var _panels_PersonalityMoodPanel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./panels/PersonalityMoodPanel */ "./src/components/panels/PersonalityMoodPanel.js");
/* harmony import */ var _panels_CognitionMemoryPanel__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./panels/CognitionMemoryPanel */ "./src/components/panels/CognitionMemoryPanel.js");
/* harmony import */ var _panels_InteractionInterfacePanel__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./panels/InteractionInterfacePanel */ "./src/components/panels/InteractionInterfacePanel.js");
/* harmony import */ var _panels_DiagnosticsRepairPanel__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./panels/DiagnosticsRepairPanel */ "./src/components/panels/DiagnosticsRepairPanel.js");
/* harmony import */ var _AliceInterface__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./AliceInterface */ "./src/components/AliceInterface.js");
/* harmony import */ var _MimicInterface__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./MimicInterface */ "./src/components/MimicInterface.js");
/* harmony import */ var _LocalLLMInterface__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./LocalLLMInterface */ "./src/components/LocalLLMInterface.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "G:\\mythologiq\\hearthlink\\src\\components\\AldenMainScreen.js",
  _s = __webpack_require__.$Refresh$.signature();



// Import individual panel components









const AldenMainScreen = ({
  accessibilitySettings,
  onVoiceCommand
}) => {
  _s();
  // Core state management
  const [activeModule, setActiveModule] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('alden');
  const [isRadialOpen, setIsRadialOpen] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [expandedPanel, setExpandedPanel] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);
  const [systemControls, setSystemControls] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({
    voice: {
      active: true,
      status: 'online'
    },
    help: {
      active: false,
      status: 'available'
    },
    accessibility: {
      active: true,
      status: 'enabled'
    }
  });

  // Chat state
  const [messages, setMessages] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [inputValue, setInputValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  const [isTyping, setIsTyping] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [voiceInputActive, setVoiceInputActive] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);

  // Alice interface state
  const [aliceInterfaceVisible, setAliceInterfaceVisible] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);

  // Mimic interface state
  const [mimicInterfaceVisible, setMimicInterfaceVisible] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);

  // Local LLM interface state
  const [llmInterfaceVisible, setLlmInterfaceVisible] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);

  // Removed SuperClaude interface state - now in Core module

  // System data state
  const [agentGraphData, setAgentGraphData] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({
    agents: [{
      id: 'alden',
      name: 'Alden',
      status: 'active',
      connections: ['alice', 'core'],
      health: 'green'
    }, {
      id: 'alice',
      name: 'Alice',
      status: 'active',
      connections: ['alden', 'sentry'],
      health: 'green'
    }, {
      id: 'mimic',
      name: 'Mimic',
      status: 'idle',
      connections: ['core'],
      health: 'yellow'
    }, {
      id: 'sentry',
      name: 'Sentry',
      status: 'monitoring',
      connections: ['alice', 'synapse'],
      health: 'green'
    }, {
      id: 'core',
      name: 'Core',
      status: 'active',
      connections: ['alden', 'vault'],
      health: 'green'
    }, {
      id: 'synapse',
      name: 'Synapse',
      status: 'active',
      connections: ['sentry'],
      health: 'green'
    }, {
      id: 'vault',
      name: 'Vault',
      status: 'active',
      connections: ['core'],
      health: 'green'
    }]
  });
  const [personalityData, setPersonalityData] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({
    currentMood: 'focused',
    moodIntensity: 74,
    traits: [{
      name: 'analytical',
      strength: 85
    }, {
      name: 'empathetic',
      strength: 80
    }, {
      name: 'vigilant',
      strength: 75
    }, {
      name: 'creative',
      strength: 90
    }, {
      name: 'skeptical',
      strength: 65
    }],
    emotionalHistory: [{
      timestamp: Date.now() - 600000,
      mood: 'curious',
      intensity: 70
    }, {
      timestamp: Date.now() - 300000,
      mood: 'focused',
      intensity: 80
    }, {
      timestamp: Date.now() - 100000,
      mood: 'analytical',
      intensity: 75
    }, {
      timestamp: Date.now(),
      mood: 'focused',
      intensity: 74
    }],
    behavioralBiases: [{
      type: 'confirmation_bias',
      active: false,
      description: 'Seeking confirming evidence'
    }, {
      type: 'recency_bias',
      active: true,
      description: 'Overweighting recent information'
    }]
  });
  const [memoryData, setMemoryData] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({
    usage: {
      shortTerm: 35,
      longTerm: 60,
      embedded: 25,
      total: 45
    },
    workingSet: [{
      id: 'mem_001',
      type: 'episodic',
      content: 'User interaction pattern analysis',
      importance: 0.85,
      timestamp: Date.now() - 300000
    }, {
      id: 'mem_002',
      type: 'semantic',
      content: 'Project management methodologies',
      importance: 0.72,
      timestamp: Date.now() - 600000
    }, {
      id: 'mem_003',
      type: 'procedural',
      content: 'Natural language processing workflow',
      importance: 0.90,
      timestamp: Date.now() - 180000
    }],
    cognitiveLoad: {
      current: 65,
      queueSize: 7,
      processingRate: 0.85
    },
    embeddingClusters: [{
      x: 20,
      y: 30,
      label: 'Technical'
    }, {
      x: 60,
      y: 40,
      label: 'Personal'
    }, {
      x: 80,
      y: 20,
      label: 'Creative'
    }, {
      x: 40,
      y: 70,
      label: 'Analytical'
    }]
  });
  const [systemHealth, setSystemHealth] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({
    uptime: {
      days: 2,
      hours: 14,
      minutes: 23
    },
    heartbeat: 'stable',
    latency: {
      current: 45,
      average: 52,
      peak: 120,
      floor: 28
    },
    recentPrompts: [{
      id: 'p1',
      content: 'Analyze the project structure',
      tokens: 25,
      response: 'Comprehensive analysis complete',
      responseTokens: 150,
      timestamp: Date.now() - 120000
    }, {
      id: 'p2',
      content: 'Show system status',
      tokens: 15,
      response: 'All systems operational',
      responseTokens: 80,
      timestamp: Date.now() - 300000
    }],
    failureEvents: [{
      timestamp: Date.now() - 3600000,
      type: 'timeout',
      severity: 'low',
      message: 'API timeout resolved automatically'
    }, {
      timestamp: Date.now() - 7200000,
      type: 'recovery',
      severity: 'info',
      message: 'Memory optimization completed'
    }],
    selfRepairOps: [{
      timestamp: Date.now() - 1800000,
      action: 'memory_cleanup',
      success: true,
      details: 'Cleared 15MB of temporary data'
    }, {
      timestamp: Date.now() - 900000,
      action: 'cache_refresh',
      success: true,
      details: 'Updated vector embeddings'
    }]
  });
  const [interactionData, setInteractionData] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({
    recentInputs: [{
      mode: 'voice',
      content: 'Show me the system status',
      timestamp: Date.now() - 120000
    }, {
      mode: 'text',
      content: 'Analyze the current workload',
      timestamp: Date.now() - 300000
    }, {
      mode: 'gesture',
      content: 'Navigate to diagnostics',
      timestamp: Date.now() - 600000
    }],
    voiceStatus: {
      listening: false,
      sensitivity: 0.7,
      threshold: 0.5
    },
    accessibilityModes: {
      screenReader: true,
      highContrast: false,
      largeText: false,
      voiceNavigation: true
    }
  });
  const messagesEndRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);

  // Module definitions for radial navigation (8 modules = 360/8 = 45 degrees each)
  const moduleItems = [{
    id: 'alden',
    label: 'ALDEN',
    angle: 0
  }, {
    id: 'alice',
    label: 'ALICE',
    angle: 45
  }, {
    id: 'core',
    label: 'CORE',
    angle: 90
  }, {
    id: 'synapse',
    label: 'SYNAPSE',
    angle: 135
  }, {
    id: 'vault',
    label: 'VAULT',
    angle: 180
  }, {
    id: 'sentry',
    label: 'SENTRY',
    angle: 225
  }, {
    id: 'mimic',
    label: 'MIMIC',
    angle: 270
  }];
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    // Initialize Alden with welcome message
    const welcomeMessage = {
      id: Date.now(),
      type: 'system',
      content: 'ALDEN MAIN SCREEN OPERATIONAL\n\nAll panels loaded successfully. System controls active.\nReady for interaction.',
      timestamp: new Date()
    };
    setMessages([welcomeMessage]);
  }, []);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    var _messagesEndRef$curre;
    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({
      behavior: 'smooth'
    });
  }, [messages]);

  // Utility functions
  const getRadialPosition = (angle, radius) => {
    const radian = angle * Math.PI / 180;
    const x = Math.cos(radian - Math.PI / 2) * radius;
    const y = Math.sin(radian - Math.PI / 2) * radius;
    return {
      x,
      y
    };
  };
  const handleModuleSelect = moduleId => {
    if (moduleId === 'alice') {
      setAliceInterfaceVisible(true);
      setIsRadialOpen(false);
      return;
    }
    if (moduleId === 'mimic') {
      setMimicInterfaceVisible(true);
      setIsRadialOpen(false);
      return;
    }
    if (moduleId === 'synapse') {
      setLlmInterfaceVisible(true);
      setIsRadialOpen(false);
      return;
    }

    // SuperClaude removed from radial navigation - now in Core module

    setActiveModule(moduleId);
    setIsRadialOpen(false);

    // Add system message about module switch
    const moduleMessage = {
      id: Date.now(),
      type: 'system',
      content: `Switching to ${moduleId.toUpperCase()} module...`,
      timestamp: new Date()
    };
    setMessages(prev => [...prev, moduleMessage]);
  };
  const handlePanelExpand = panelId => {
    setExpandedPanel(expandedPanel === panelId ? null : panelId);
  };
  const handleSystemControlToggle = controlType => {
    setSystemControls(prev => ({
      ...prev,
      [controlType]: {
        ...prev[controlType],
        active: !prev[controlType].active
      }
    }));
  };
  const handleSendMessage = async content => {
    if (!content.trim()) return;
    const userMessage = {
      id: Date.now(),
      type: 'user',
      content: content.trim(),
      timestamp: new Date()
    };
    setMessages(prev => [...prev, userMessage]);
    setInputValue('');
    setIsTyping(true);

    // Simulate AI response
    setTimeout(() => {
      const response = {
        id: Date.now() + 1,
        type: 'assistant',
        content: `Processing your request: "${content.trim()}"\n\nI understand you're asking about system operations. All panels are functioning normally and data flows are active.`,
        timestamp: new Date()
      };
      setMessages(prev => [...prev, response]);
      setIsTyping(false);
    }, 1500);
  };
  const handleVoiceToggle = () => {
    setVoiceInputActive(!voiceInputActive);
    setInteractionData(prev => ({
      ...prev,
      voiceStatus: {
        ...prev.voiceStatus,
        listening: !voiceInputActive
      }
    }));
  };

  // Render functions
  const renderRadialNavigation = () => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("div", {
    className: `radial-navigation ${isRadialOpen ? 'open' : ''}`,
    children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("button", {
      className: `radial-center-button ${isRadialOpen ? 'active' : ''}`,
      onClick: () => setIsRadialOpen(!isRadialOpen),
      "aria-label": "Open module navigation",
      children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("div", {
        className: "hearthlink-glyph",
        children: "\u29EC"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 269,
        columnNumber: 9
      }, undefined)
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 264,
      columnNumber: 7
    }, undefined), isRadialOpen && /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("div", {
        className: "radial-overlay",
        onClick: () => setIsRadialOpen(false)
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 274,
        columnNumber: 11
      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("div", {
        className: "radial-items",
        children: moduleItems.map((module, index) => {
          const {
            x,
            y
          } = getRadialPosition(module.angle, 100);
          return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("button", {
            className: `radial-module-item ${activeModule === module.id ? 'active' : ''}`,
            style: {
              transform: `translate(${x}px, ${y}px)`,
              transitionDelay: `${index * 50}ms`
            },
            onClick: () => handleModuleSelect(module.id),
            "aria-label": `Switch to ${module.label} module`,
            children: module.label
          }, module.id, false, {
            fileName: _jsxFileName,
            lineNumber: 279,
            columnNumber: 17
          }, undefined);
        })
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 275,
        columnNumber: 11
      }, undefined)]
    }, void 0, true)]
  }, void 0, true, {
    fileName: _jsxFileName,
    lineNumber: 263,
    columnNumber: 5
  }, undefined);

  // System controls removed - now handled globally in banner

  const renderPanelFrame = () => {
    if (expandedPanel) {
      return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("div", {
        className: "panel-item expanded",
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("div", {
          className: "panel-header",
          children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("h3", {
            className: "panel-title",
            children: expandedPanel.toUpperCase()
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 306,
            columnNumber: 13
          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("button", {
            className: "panel-close-button",
            onClick: () => setExpandedPanel(null),
            "aria-label": "Close expanded panel",
            children: "\u2715"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 307,
            columnNumber: 13
          }, undefined)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 305,
          columnNumber: 11
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("div", {
          className: "panel-content",
          children: renderExpandedPanel()
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 315,
          columnNumber: 11
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 304,
        columnNumber: 9
      }, undefined);
    }
    return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.Fragment, {
      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("div", {
        className: "panel-item",
        onClick: () => handlePanelExpand('observatory'),
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("div", {
          className: "panel-header",
          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("h3", {
            className: "panel-title",
            children: "Observatory"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 326,
            columnNumber: 13
          }, undefined)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 325,
          columnNumber: 11
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("div", {
          className: "panel-content",
          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(_panels_ObservatoryPanel__WEBPACK_IMPORTED_MODULE_2__["default"], {
            data: agentGraphData,
            isExpanded: false,
            onExpand: () => handlePanelExpand('observatory')
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 329,
            columnNumber: 13
          }, undefined)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 328,
          columnNumber: 11
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 324,
        columnNumber: 9
      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("div", {
        className: "panel-item",
        onClick: () => handlePanelExpand('personality'),
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("div", {
          className: "panel-header",
          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("h3", {
            className: "panel-title",
            children: "Personality & Mood"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 339,
            columnNumber: 13
          }, undefined)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 338,
          columnNumber: 11
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("div", {
          className: "panel-content",
          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(_panels_PersonalityMoodPanel__WEBPACK_IMPORTED_MODULE_3__["default"], {
            data: personalityData,
            isExpanded: false,
            onExpand: () => handlePanelExpand('personality')
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 342,
            columnNumber: 13
          }, undefined)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 341,
          columnNumber: 11
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 337,
        columnNumber: 9
      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("div", {
        className: "panel-item",
        onClick: () => handlePanelExpand('interaction'),
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("div", {
          className: "panel-header",
          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("h3", {
            className: "panel-title",
            children: "Interaction Interface"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 352,
            columnNumber: 13
          }, undefined)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 351,
          columnNumber: 11
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("div", {
          className: "panel-content",
          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(_panels_InteractionInterfacePanel__WEBPACK_IMPORTED_MODULE_5__["default"], {
            data: interactionData,
            isExpanded: false,
            onExpand: () => handlePanelExpand('interaction'),
            onVoiceToggle: handleVoiceToggle,
            voiceActive: voiceInputActive
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 355,
            columnNumber: 13
          }, undefined)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 354,
          columnNumber: 11
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 350,
        columnNumber: 9
      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("div", {
        className: "panel-item",
        onClick: () => handlePanelExpand('cognition'),
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("div", {
          className: "panel-header",
          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("h3", {
            className: "panel-title",
            children: "Cognition & Memory"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 367,
            columnNumber: 13
          }, undefined)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 366,
          columnNumber: 11
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("div", {
          className: "panel-content",
          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(_panels_CognitionMemoryPanel__WEBPACK_IMPORTED_MODULE_4__["default"], {
            data: memoryData,
            isExpanded: false,
            onExpand: () => handlePanelExpand('cognition')
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 370,
            columnNumber: 13
          }, undefined)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 369,
          columnNumber: 11
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 365,
        columnNumber: 9
      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("div", {
        className: "panel-item",
        onClick: () => handlePanelExpand('diagnostics'),
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("div", {
          className: "panel-header",
          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("h3", {
            className: "panel-title",
            children: "Diagnostics & Repair"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 380,
            columnNumber: 13
          }, undefined)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 379,
          columnNumber: 11
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("div", {
          className: "panel-content",
          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(_panels_DiagnosticsRepairPanel__WEBPACK_IMPORTED_MODULE_6__["default"], {
            data: systemHealth,
            isExpanded: false,
            onExpand: () => handlePanelExpand('diagnostics')
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 383,
            columnNumber: 13
          }, undefined)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 382,
          columnNumber: 11
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 378,
        columnNumber: 9
      }, undefined)]
    }, void 0, true);
  };
  const renderExpandedPanel = () => {
    switch (expandedPanel) {
      case 'observatory':
        return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(_panels_ObservatoryPanel__WEBPACK_IMPORTED_MODULE_2__["default"], {
          data: agentGraphData,
          isExpanded: true
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 397,
          columnNumber: 16
        }, undefined);
      case 'personality':
        return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(_panels_PersonalityMoodPanel__WEBPACK_IMPORTED_MODULE_3__["default"], {
          data: personalityData,
          isExpanded: true
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 399,
          columnNumber: 16
        }, undefined);
      case 'cognition':
        return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(_panels_CognitionMemoryPanel__WEBPACK_IMPORTED_MODULE_4__["default"], {
          data: memoryData,
          isExpanded: true
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 401,
          columnNumber: 16
        }, undefined);
      case 'interaction':
        return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(_panels_InteractionInterfacePanel__WEBPACK_IMPORTED_MODULE_5__["default"], {
          data: interactionData,
          isExpanded: true,
          onVoiceToggle: handleVoiceToggle,
          voiceActive: voiceInputActive
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 403,
          columnNumber: 16
        }, undefined);
      case 'diagnostics':
        return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(_panels_DiagnosticsRepairPanel__WEBPACK_IMPORTED_MODULE_6__["default"], {
          data: systemHealth,
          isExpanded: true
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 410,
          columnNumber: 16
        }, undefined);
      default:
        return null;
    }
  };
  const renderChatInterface = () => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("div", {
    className: "persistent-chat",
    children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("div", {
      className: "chat-messages",
      children: [messages.map(message => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("div", {
        className: `chat-message ${message.type}`,
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("div", {
          className: "message-content",
          children: message.content
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 421,
          columnNumber: 13
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("div", {
          className: "message-timestamp",
          children: message.timestamp.toLocaleTimeString()
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 422,
          columnNumber: 13
        }, undefined)]
      }, message.id, true, {
        fileName: _jsxFileName,
        lineNumber: 420,
        columnNumber: 11
      }, undefined)), isTyping && /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("div", {
        className: "chat-message assistant typing",
        children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("div", {
          className: "typing-indicator",
          children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("span", {}, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 430,
            columnNumber: 15
          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("span", {}, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 430,
            columnNumber: 28
          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("span", {}, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 430,
            columnNumber: 41
          }, undefined)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 429,
          columnNumber: 13
        }, undefined)
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 428,
        columnNumber: 11
      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("div", {
        ref: messagesEndRef
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 434,
        columnNumber: 9
      }, undefined)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 418,
      columnNumber: 7
    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("div", {
      className: "chat-input-area",
      children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("div", {
        className: "input-container",
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("textarea", {
          value: inputValue,
          onChange: e => setInputValue(e.target.value),
          onKeyPress: e => {
            if (e.key === 'Enter' && !e.shiftKey) {
              e.preventDefault();
              handleSendMessage(inputValue);
            }
          },
          placeholder: "Type your message...",
          className: "chat-input",
          rows: "2",
          disabled: isTyping
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 439,
          columnNumber: 11
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("button", {
          onClick: () => handleSendMessage(inputValue),
          disabled: !inputValue.trim() || isTyping,
          className: "chat-send-button",
          children: isTyping ? 'Processing...' : 'Send'
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 453,
          columnNumber: 11
        }, undefined), voiceInputActive && /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("button", {
          className: "voice-input-button active",
          onClick: handleVoiceToggle,
          "aria-label": "Voice input active",
          children: "\uD83C\uDFA4"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 461,
          columnNumber: 13
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 438,
        columnNumber: 9
      }, undefined)
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 437,
      columnNumber: 7
    }, undefined)]
  }, void 0, true, {
    fileName: _jsxFileName,
    lineNumber: 417,
    columnNumber: 5
  }, undefined);
  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("div", {
    className: "alden-main-screen",
    children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("div", {
      className: "universal-header",
      children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("div", {
        className: "hearthlink-nav-center",
        children: renderRadialNavigation()
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 479,
        columnNumber: 9
      }, undefined)
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 477,
      columnNumber: 7
    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("div", {
      className: "main-layout-container",
      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("div", {
        className: "panel-frame-left",
        children: renderPanelFrame()
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 488,
        columnNumber: 9
      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("div", {
        className: "chat-column-right",
        children: renderChatInterface()
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 493,
        columnNumber: 9
      }, undefined)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 486,
      columnNumber: 7
    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(_AliceInterface__WEBPACK_IMPORTED_MODULE_7__["default"], {
      isVisible: aliceInterfaceVisible,
      onClose: () => setAliceInterfaceVisible(false)
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 499,
      columnNumber: 7
    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(_MimicInterface__WEBPACK_IMPORTED_MODULE_8__["default"], {
      isVisible: mimicInterfaceVisible,
      onClose: () => setMimicInterfaceVisible(false)
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 505,
      columnNumber: 7
    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(_LocalLLMInterface__WEBPACK_IMPORTED_MODULE_9__["default"], {
      isVisible: llmInterfaceVisible,
      onClose: () => setLlmInterfaceVisible(false)
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 511,
      columnNumber: 7
    }, undefined)]
  }, void 0, true, {
    fileName: _jsxFileName,
    lineNumber: 475,
    columnNumber: 5
  }, undefined);
};
_s(AldenMainScreen, "lv/8DsCzBuCRHvoVQxQOVWA9bbo=");
_c = AldenMainScreen;
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AldenMainScreen);
var _c;
__webpack_require__.$Refresh$.register(_c, "AldenMainScreen");

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("a2515cd7f842bafd4667")
/******/ })();
/******/ 
/******/ }
);
//# sourceMappingURL=main.da2a6739e3eaa8126c2b.hot-update.js.map