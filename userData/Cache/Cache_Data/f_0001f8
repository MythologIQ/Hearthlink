"use strict";
globalThis["webpackHotUpdateHearthlink"]("main",{

/***/ "./src/components/SettingsManager.js":
/*!*******************************************!*\
  !*** ./src/components/SettingsManager.js ***!
  \*******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _SettingsManager_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SettingsManager.css */ "./src/components/SettingsManager.css");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "G:\\mythologiq\\hearthlink\\src\\components\\SettingsManager.js",
  _s = __webpack_require__.$Refresh$.signature();



const SettingsManager = ({
  isVisible,
  onClose,
  onSettingsChange
}) => {
  _s();
  var _tabs$find;
  const [activeTab, setActiveTab] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('general');
  const [settings, setSettings] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({
    general: {
      theme: 'starcraft',
      language: 'en',
      autoSave: true,
      notifications: true,
      voiceEnabled: true,
      startupModule: 'alden'
    },
    apis: {
      googleAiKey: '',
      claudeCodePath: '',
      ollamaUrl: 'http://localhost:11434',
      customEndpoints: []
    },
    localLLM: {
      enabled: false,
      provider: 'ollama',
      endpoint: 'http://localhost:11434',
      dualLLMMode: true,
      profiles: {
        low: {
          enabled: true,
          model: 'llama3.2:3b',
          parameterRange: '2-3B',
          roles: ['routing', 'simple_tasks'],
          temperature: 0.7,
          contextLength: 16384,
          priority: 1
        },
        mid: {
          enabled: true,
          model: 'llama3.1:8b',
          parameterRange: '7-9B',
          roles: ['reasoning', 'coding', 'complex_tasks'],
          temperature: 0.7,
          contextLength: 32768,
          priority: 2
        }
      },
      roleAssignments: {
        routing: 'low',
        reasoning: 'mid',
        coding: 'mid',
        multimodal: 'mid',
        simple_tasks: 'low',
        complex_tasks: 'mid'
      },
      streaming: true,
      autoStart: false,
      fallbackEnabled: true,
      healthCheckInterval: 30000
    },
    agents: {
      alden: {
        enabled: true,
        priority: 1,
        prompt: "You are Alden, a highly capable AI assistant and productivity companion. You help users with their daily tasks, provide thoughtful insights, and maintain a friendly, professional demeanor. You excel at understanding context and providing relevant, actionable advice."
      },
      alice: {
        enabled: true,
        priority: 2,
        prompt: "You are Alice, a cognitive-behavioral analysis specialist. You focus on analytical thinking, problem-solving, and optimization. You help users break down complex problems, identify patterns, and develop systematic approaches to challenges."
      },
      mimic: {
        enabled: true,
        priority: 3,
        prompt: "DYNAMIC - This agent adapts its persona based on context and user needs.",
        isDynamic: true
      },
      sentry: {
        enabled: true,
        priority: 4,
        prompt: "HARD-CODED - System monitoring and security specialist with optimized monitoring capabilities.",
        isHardCoded: true
      },
      core: {
        enabled: true,
        priority: 0,
        prompt: "You are the Core orchestration system, responsible for managing multi-agent interactions and coordinating complex workflows."
      }
    },
    voice: {
      enabled: true,
      sensitivity: 0.7,
      language: 'en-US',
      wakeWord: 'alden',
      routingMode: 'smart'
    },
    security: {
      encryptionEnabled: true,
      auditLogging: true,
      sessionTimeout: 30,
      autoLock: false
    },
    performance: {
      maxMemoryUsage: 4096,
      cachingEnabled: true,
      preloadModules: true,
      backgroundSync: true
    }
  });
  const [testResults, setTestResults] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({});
  const [availableModels, setAvailableModels] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [recommendedModels, setRecommendedModels] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [systemSpecs, setSystemSpecs] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({
    ram: 0,
    gpu: false
  });
  const [serviceStatus, setServiceStatus] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({
    isRunning: false,
    lastCheck: null,
    error: null
  });
  const [saving, setSaving] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  const [successMessage, setSuccessMessage] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  const [fetchingModels, setFetchingModels] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    loadSettings();
    if (isVisible) {
      // Check service status when settings are opened
      setTimeout(() => checkServiceStatus(), 1000);
      // Fetch available models and system specs
      setTimeout(() => {
        fetchAvailableModels();
        detectSystemSpecs();
      }, 1500);
    }
  }, [isVisible]);
  const loadSettings = async () => {
    try {
      const response = await fetch('http://localhost:8003/api/settings');
      if (response.ok) {
        const loadedSettings = await response.json();
        setSettings(prev => ({
          ...prev,
          ...loadedSettings
        }));
      }
    } catch (err) {
      console.warn('Failed to load settings:', err);
      // Use defaults
    }
  };
  const saveSettings = async () => {
    setSaving(true);
    setError('');
    setSuccessMessage('');
    try {
      console.log('SettingsManager - Saving settings:', settings);

      // Always save to localStorage first
      localStorage.setItem('hearthlinkSettings', JSON.stringify(settings));

      // Try to save to server if available
      try {
        const response = await fetch('http://localhost:8003/api/settings', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(settings)
        });
        if (response.ok) {
          console.log('SettingsManager - Server save successful');
        } else {
          console.warn('SettingsManager - Server save failed, using localStorage only');
        }
      } catch (serverError) {
        console.warn('SettingsManager - Server unavailable, using localStorage only:', serverError);
      }

      // Always complete the save process
      onSettingsChange(settings);
      setSuccessMessage('✅ Settings saved successfully!');
      setSaving(false);

      // Clear success message after 3 seconds
      setTimeout(() => setSuccessMessage(''), 3000);
    } catch (err) {
      console.error('SettingsManager - Save error:', err);
      setError(`Save failed: ${err.message}`);
      setSaving(false);
    }
  };
  const testConnection = async service => {
    setTestResults(prev => ({
      ...prev,
      [service]: 'testing'
    }));
    try {
      if (service === 'local-llm') {
        // Test Local LLM API service with multiple fallback endpoints
        const endpoints = ['http://localhost:8001/api/test', 'http://localhost:11434/api/tags',
        // Ollama endpoint
        'http://localhost:8001/health'];
        let lastError = null;
        let success = false;
        for (const endpoint of endpoints) {
          try {
            const response = await fetch(endpoint, {
              method: endpoint.includes('tags') ? 'GET' : 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              timeout: 5000
            });
            if (response.ok) {
              const data = await response.json();
              if (endpoint.includes('tags')) {
                // Ollama tags endpoint
                setTestResults(prev => ({
                  ...prev,
                  [service]: 'success',
                  [`${service}_details`]: `✅ Ollama connected\n🔢 Available Models: ${data.models && data.models.length || 0}\n⚙️ Endpoint: ${endpoint}`
                }));
              } else if (data.success) {
                // Custom API success
                setTestResults(prev => ({
                  ...prev,
                  [service]: 'success',
                  [`${service}_details`]: `✅ ${data.message}\n🤖 Model: ${data.model}\n💬 Test Response: "${data.response && data.response.substring(0, 80) || 'No response'}..."\n📊 Response Time: ${data.response_time && data.response_time.toFixed(2) || 0}s\n🔢 Available Models: ${data.available_models && data.available_models.length || 0}\n⚙️ Dual Profiles: ${Object.keys(data.dual_profiles || {}).join(', ')}`
                }));
              } else {
                // Custom API but failed
                setTestResults(prev => ({
                  ...prev,
                  [service]: 'warning',
                  [`${service}_details`]: `⚠️ ${data.error}\n💡 ${data.suggestion || 'Check Local LLM API service'}`
                }));
              }
              success = true;
              break;
            } else {
              lastError = `HTTP ${response.status}: ${response.statusText}`;
            }
          } catch (err) {
            lastError = err.message;
            continue;
          }
        }
        if (!success) {
          throw new Error(`All endpoints failed. Last error: ${lastError}`);
        }
      } else {
        // Use existing backend API for other services
        let requestBody;
        if (service === 'local-llm') {
          // Send localLLM settings for local-llm test
          requestBody = JSON.stringify({
            localLLM: settings.localLLM
          });
        } else {
          // Send API settings for other services
          requestBody = JSON.stringify(settings.apis);
        }
        const response = await fetch(`http://localhost:8003/api/test/${service}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: requestBody
        });
        const result = await response.json();
        setTestResults(prev => ({
          ...prev,
          [service]: result.success ? 'success' : 'failed',
          [`${service}_details`]: result.details || result.error
        }));
      }
    } catch (err) {
      setTestResults(prev => ({
        ...prev,
        [service]: 'failed',
        [`${service}_details`]: err.message
      }));
    }
  };
  const updateSetting = (category, key, value) => {
    setSettings(prev => ({
      ...prev,
      [category]: {
        ...prev[category],
        [key]: value
      }
    }));
  };
  const getDefaultPrompt = agentId => {
    const defaultPrompts = {
      alden: "You are Alden, a highly capable AI assistant and productivity companion. You help users with their daily tasks, provide thoughtful insights, and maintain a friendly, professional demeanor. You excel at understanding context and providing relevant, actionable advice.",
      alice: "You are Alice, a cognitive-behavioral analysis specialist. You focus on analytical thinking, problem-solving, and optimization. You help users break down complex problems, identify patterns, and develop systematic approaches to challenges.",
      core: "You are the Core orchestration system, responsible for managing multi-agent interactions and coordinating complex workflows."
    };
    return defaultPrompts[agentId] || "";
  };
  const startLocalLLMService = async () => {
    setTestResults(prev => ({
      ...prev,
      'local-llm': 'testing',
      'local-llm_details': 'Starting Local LLM service...'
    }));
    try {
      // Check if Local LLM API is running
      const response = await fetch('http://localhost:8001/api/health', {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json'
        }
      });
      if (response.ok) {
        const data = await response.json();
        setServiceStatus({
          isRunning: data.ollama_connected,
          lastCheck: new Date().toISOString(),
          error: data.ollama_connected ? null : 'Ollama backend not connected'
        });
        setTestResults(prev => ({
          ...prev,
          'local-llm': data.ollama_connected ? 'success' : 'warning',
          'local-llm_details': data.ollama_connected ? `✅ Local LLM API running\n🔌 Ollama connected\n📦 ${data.models_available} models available` : '⚠️ Local LLM API running but Ollama not connected\n💡 Ensure Ollama is running: ollama serve'
        }));
      } else {
        throw new Error(`Local LLM API not responding: HTTP ${response.status}`);
      }
    } catch (error) {
      setServiceStatus({
        isRunning: false,
        lastCheck: new Date().toISOString(),
        error: error.message
      });
      setTestResults(prev => ({
        ...prev,
        'local-llm': 'failed',
        'local-llm_details': `❌ Failed to connect to Local LLM API\n🔧 ${error.message}\n💡 Ensure Local LLM API is running on port 8001`
      }));
    }
  };
  const stopLocalLLMService = async () => {
    setServiceStatus({
      isRunning: false,
      lastCheck: new Date().toISOString(),
      error: null
    });
    setTestResults(prev => ({
      ...prev,
      'local-llm': 'warning',
      'local-llm_details': 'Service management not implemented in this version'
    }));
  };
  const restartLocalLLMService = async () => {
    setTestResults(prev => ({
      ...prev,
      'local-llm': 'testing',
      'local-llm_details': 'Restarting service...'
    }));
    await stopLocalLLMService();
    setTimeout(() => {
      startLocalLLMService();
    }, 2000);
  };
  const checkServiceStatus = async () => {
    setServiceStatus(prev => ({
      ...prev,
      error: null
    }));
    try {
      // Check Local LLM API service
      const response = await fetch('http://localhost:8001/api/health', {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json'
        }
      });
      if (response.ok) {
        const data = await response.json();
        setServiceStatus({
          isRunning: data.connected,
          lastCheck: new Date().toISOString(),
          error: data.connected ? null : 'Ollama service not connected',
          details: {
            models: data.available_models,
            version: data.version,
            profiles: data.dual_profile_config
          }
        });
        setTestResults(prev => ({
          ...prev,
          'local-llm': 'success',
          'local-llm_details': `Service running: ${data.version || 'Version unknown'}`
        }));
      } else {
        throw new Error(`HTTP ${response.status}: ${response.statusText}`);
      }
    } catch (error) {
      setServiceStatus({
        isRunning: false,
        lastCheck: new Date().toISOString(),
        error: error.message
      });
      setTestResults(prev => ({
        ...prev,
        'local-llm': 'failed',
        'local-llm_details': `Service check failed: ${error.message}`
      }));
    }
  };
  const fetchAvailableModels = async () => {
    setFetchingModels(true);
    try {
      // Try multiple endpoints for model fetching
      const endpoints = ['http://localhost:11434/api/tags',
      // Ollama
      'http://localhost:8001/api/models',
      // Custom API
      'http://localhost:1234/v1/models' // LM Studio
      ];
      for (const endpoint of endpoints) {
        try {
          const response = await fetch(endpoint);
          if (response.ok) {
            const data = await response.json();
            let models = [];
            if (endpoint.includes('ollama')) {
              models = data.models || [];
            } else if (endpoint.includes('8001')) {
              models = data.available_models || [];
            } else if (endpoint.includes('1234')) {
              models = data.data || [];
            }
            setAvailableModels(models);
            break;
          }
        } catch (err) {
          console.warn(`Failed to fetch from ${endpoint}:`, err);
        }
      }
    } catch (err) {
      console.error('Failed to fetch available models:', err);
    } finally {
      setFetchingModels(false);
    }
  };
  const detectSystemSpecs = async () => {
    try {
      // Get system specs for model recommendations
      const response = await fetch('http://localhost:8001/api/system-specs');
      if (response.ok) {
        const specs = await response.json();
        setSystemSpecs(specs);

        // Generate recommended models based on system specs
        const recommendations = generateModelRecommendations(specs);
        setRecommendedModels(recommendations);
      }
    } catch (err) {
      console.warn('Failed to detect system specs:', err);
      // Default specs for fallback
      setSystemSpecs({
        ram: 16,
        gpu: false
      });
      setRecommendedModels([{
        name: 'llama3.2:3b',
        reason: 'Lightweight and efficient'
      }, {
        name: 'llama3.1:8b',
        reason: 'Balanced performance'
      }]);
    }
  };
  const generateModelRecommendations = specs => {
    const recommendations = [];

    // Low-end recommendations (< 8GB RAM)
    if (specs.ram < 8) {
      recommendations.push({
        name: 'llama3.2:1b',
        reason: 'Ultra-light for low RAM systems',
        starred: true
      }, {
        name: 'tinyllama:1.1b',
        reason: 'Minimal resource usage'
      });
    }
    // Mid-range recommendations (8-16GB RAM)
    else if (specs.ram >= 8 && specs.ram < 32) {
      recommendations.push({
        name: 'llama3.2:3b',
        reason: 'Great balance of speed and capability',
        starred: true
      }, {
        name: 'llama3.1:8b',
        reason: 'Enhanced reasoning capabilities'
      }, {
        name: 'mistral:7b',
        reason: 'Excellent for coding tasks'
      });
    }
    // High-end recommendations (32GB+ RAM)
    else {
      recommendations.push({
        name: 'llama3.1:8b',
        reason: 'Optimal for most tasks',
        starred: true
      }, {
        name: 'llama3.1:70b',
        reason: 'Top-tier performance'
      }, {
        name: 'codellama:34b',
        reason: 'Superior code generation'
      });
    }

    // Add GPU-specific recommendations
    if (specs.gpu) {
      recommendations.push({
        name: 'llama3.2:3b-instruct-q4_0',
        reason: 'GPU-optimized version',
        starred: specs.ram < 16
      });
    }
    return recommendations;
  };
  const repairWebSocketConnection = async () => {
    try {
      // Attempt to reconnect WebSocket services
      const response = await fetch('http://localhost:8001/api/websocket/repair', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        }
      });
      if (response.ok) {
        setSuccessMessage('✅ WebSocket connection repaired successfully!');
        // Retry fetching models after repair
        setTimeout(() => {
          fetchAvailableModels();
          checkServiceStatus();
        }, 1000);
      } else {
        throw new Error(`Repair failed: ${response.statusText}`);
      }
    } catch (err) {
      setError(`WebSocket repair failed: ${err.message}`);
    }
  };
  const renderWebSocketFallback = () => {
    const hasConnectionIssues = !serviceStatus.isRunning || serviceStatus.error;
    const noModelsAvailable = !fetchingModels && availableModels.length === 0;
    if (!hasConnectionIssues && !noModelsAvailable) return null;
    return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
      className: "websocket-fallback",
      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
        className: "fallback-header",
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("span", {
          className: "fallback-icon",
          children: "\u26A0\uFE0F"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 557,
          columnNumber: 11
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("strong", {
          children: "Connection Issues Detected"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 558,
          columnNumber: 11
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 556,
        columnNumber: 9
      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
        className: "fallback-content",
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("p", {
          children: "Local LLM service appears to be unavailable. This could be due to:"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 561,
          columnNumber: 11
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("ul", {
          children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("li", {
            children: "WebSocket connection issues"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 563,
            columnNumber: 13
          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("li", {
            children: "Service not running on port 8001"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 564,
            columnNumber: 13
          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("li", {
            children: "Network connectivity problems"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 565,
            columnNumber: 13
          }, undefined)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 562,
          columnNumber: 11
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          className: "fallback-actions",
          children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("button", {
            onClick: () => repairWebSocketConnection(),
            className: "action-btn warning",
            children: "\uD83D\uDD27 Repair WebSocket Connection"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 568,
            columnNumber: 13
          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("button", {
            onClick: () => fetchAvailableModels(),
            className: "action-btn info",
            children: "\uD83D\uDD04 Retry Model Fetch"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 574,
            columnNumber: 13
          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("button", {
            onClick: () => checkServiceStatus(),
            className: "action-btn primary",
            children: "\uD83D\uDCE1 Check Service Status"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 580,
            columnNumber: 13
          }, undefined)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 567,
          columnNumber: 11
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 560,
        columnNumber: 9
      }, undefined)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 555,
      columnNumber: 7
    }, undefined);
  };
  const renderModelDropdown = (profile, profileType) => {
    const currentModel = settings.localLLM.profiles[profileType].model;
    const displayModels = availableModels.length > 0 ? availableModels : [{
      name: 'llama3.2:3b'
    }, {
      name: 'llama3.1:8b'
    }, {
      name: 'mistral:7b'
    }, {
      name: 'codellama:7b'
    }];
    return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
      className: "setting-group",
      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("label", {
        children: "Model Selection"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 603,
        columnNumber: 9
      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("select", {
        value: currentModel,
        onChange: e => updateSetting('localLLM', 'profiles', {
          ...settings.localLLM.profiles,
          [profileType]: {
            ...settings.localLLM.profiles[profileType],
            model: e.target.value
          }
        }),
        disabled: !settings.localLLM.enabled || !settings.localLLM.profiles[profileType].enabled,
        children: displayModels.map(model => {
          const modelName = model.name || model.id || model;
          const isRecommended = recommendedModels.some(rec => rec.name === modelName);
          const recommendation = recommendedModels.find(rec => rec.name === modelName);
          return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("option", {
            value: modelName,
            children: [recommendation !== null && recommendation !== void 0 && recommendation.starred ? '⭐ ' : '', modelName, isRecommended ? ` (${recommendation.reason})` : '']
          }, modelName, true, {
            fileName: _jsxFileName,
            lineNumber: 618,
            columnNumber: 15
          }, undefined);
        })
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 604,
        columnNumber: 9
      }, undefined), fetchingModels && /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
        className: "setting-description",
        children: "\uD83D\uDD04 Fetching available models..."
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 626,
        columnNumber: 11
      }, undefined), !fetchingModels && availableModels.length === 0 && /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
        className: "setting-description",
        children: "\u26A0\uFE0F No models detected. Check your Local LLM service."
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 631,
        columnNumber: 11
      }, undefined)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 602,
      columnNumber: 7
    }, undefined);
  };
  const renderSystemRecommendations = () => {
    if (recommendedModels.length === 0) return null;
    return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
      className: "setting-group",
      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("label", {
        children: "System Recommendations"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 644,
        columnNumber: 9
      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
        className: "system-recommendations",
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          className: "system-specs",
          children: ["\uD83D\uDCBB System: ", systemSpecs.ram, "GB RAM ", systemSpecs.gpu ? '• GPU Available' : '• CPU Only']
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 646,
          columnNumber: 11
        }, undefined), recommendedModels.map(rec => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          className: "recommendation-item",
          children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("span", {
            className: "model-name",
            children: [rec.starred ? '⭐ ' : '', rec.name]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 651,
            columnNumber: 15
          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("span", {
            className: "model-reason",
            children: rec.reason
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 654,
            columnNumber: 15
          }, undefined)]
        }, rec.name, true, {
          fileName: _jsxFileName,
          lineNumber: 650,
          columnNumber: 13
        }, undefined))]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 645,
        columnNumber: 9
      }, undefined)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 643,
      columnNumber: 7
    }, undefined);
  };
  const renderGeneralSettings = () => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
    className: "settings-section",
    children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("h3", {
      children: "General Settings"
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 664,
      columnNumber: 7
    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
      className: "setting-group",
      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("label", {
        children: "Theme"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 667,
        columnNumber: 9
      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("select", {
        value: settings.general.theme,
        onChange: e => updateSetting('general', 'theme', e.target.value),
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("option", {
          value: "starcraft",
          children: "StarCraft"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 672,
          columnNumber: 11
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("option", {
          value: "dark",
          children: "Dark"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 673,
          columnNumber: 11
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("option", {
          value: "light",
          children: "Light"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 674,
          columnNumber: 11
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 668,
        columnNumber: 9
      }, undefined)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 666,
      columnNumber: 7
    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
      className: "setting-group",
      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("label", {
        children: "Startup Module"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 679,
        columnNumber: 9
      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("select", {
        value: settings.general.startupModule,
        onChange: e => updateSetting('general', 'startupModule', e.target.value),
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("option", {
          value: "alden",
          children: "Alden"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 684,
          columnNumber: 11
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("option", {
          value: "alice",
          children: "Alice"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 685,
          columnNumber: 11
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("option", {
          value: "core",
          children: "Core"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 686,
          columnNumber: 11
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("option", {
          value: "vault",
          children: "Vault"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 687,
          columnNumber: 11
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 680,
        columnNumber: 9
      }, undefined)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 678,
      columnNumber: 7
    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
      className: "setting-group",
      children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("label", {
        className: "checkbox-label",
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("input", {
          type: "checkbox",
          checked: settings.general.autoSave,
          onChange: e => updateSetting('general', 'autoSave', e.target.checked)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 693,
          columnNumber: 11
        }, undefined), "Auto-save sessions"]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 692,
        columnNumber: 9
      }, undefined)
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 691,
      columnNumber: 7
    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
      className: "setting-group",
      children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("label", {
        className: "checkbox-label",
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("input", {
          type: "checkbox",
          checked: settings.general.notifications,
          onChange: e => updateSetting('general', 'notifications', e.target.checked)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 704,
          columnNumber: 11
        }, undefined), "Enable notifications"]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 703,
        columnNumber: 9
      }, undefined)
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 702,
      columnNumber: 7
    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
      className: "setting-group",
      children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("label", {
        className: "checkbox-label",
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("input", {
          type: "checkbox",
          checked: settings.general.voiceEnabled,
          onChange: e => updateSetting('general', 'voiceEnabled', e.target.checked)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 715,
          columnNumber: 11
        }, undefined), "Voice interface enabled"]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 714,
        columnNumber: 9
      }, undefined)
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 713,
      columnNumber: 7
    }, undefined)]
  }, void 0, true, {
    fileName: _jsxFileName,
    lineNumber: 663,
    columnNumber: 5
  }, undefined);
  const renderApiSettings = () => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
    className: "settings-section",
    children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("h3", {
      children: "API Configuration"
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 728,
      columnNumber: 7
    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
      className: "setting-group",
      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("label", {
        children: "Google AI Studio Key"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 731,
        columnNumber: 9
      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
        className: "input-with-test",
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("input", {
          type: "password",
          value: settings.apis.googleAiKey,
          onChange: e => updateSetting('apis', 'googleAiKey', e.target.value),
          placeholder: "Enter your Google AI Studio API key"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 733,
          columnNumber: 11
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("button", {
          onClick: () => testConnection('google-ai'),
          className: `test-btn ${testResults['google-ai'] || ''}`,
          disabled: testResults['google-ai'] === 'testing',
          children: testResults['google-ai'] === 'testing' ? 'Testing...' : 'Test'
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 739,
          columnNumber: 11
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 732,
        columnNumber: 9
      }, undefined), testResults['google-ai_details'] && /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
        className: `test-result ${testResults['google-ai']}`,
        children: testResults['google-ai_details']
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 748,
        columnNumber: 11
      }, undefined)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 730,
      columnNumber: 7
    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
      className: "setting-group",
      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("label", {
        children: "Claude Code CLI Path"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 755,
        columnNumber: 9
      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
        className: "input-with-test",
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("input", {
          type: "text",
          value: settings.apis.claudeCodePath,
          onChange: e => updateSetting('apis', 'claudeCodePath', e.target.value),
          placeholder: "/usr/local/bin/claude-code or C:/Program Files/Claude Code/claude-code.exe"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 757,
          columnNumber: 11
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("button", {
          onClick: () => testConnection('claude-code'),
          className: `test-btn ${testResults['claude-code'] || ''}`,
          disabled: testResults['claude-code'] === 'testing',
          children: testResults['claude-code'] === 'testing' ? 'Testing...' : 'Test'
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 763,
          columnNumber: 11
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 756,
        columnNumber: 9
      }, undefined), testResults['claude-code_details'] && /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
        className: `test-result ${testResults['claude-code']}`,
        children: testResults['claude-code_details']
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 772,
        columnNumber: 11
      }, undefined)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 754,
      columnNumber: 7
    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
      className: "setting-group",
      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("label", {
        children: "Ollama URL"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 779,
        columnNumber: 9
      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
        className: "input-with-test",
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("input", {
          type: "text",
          value: settings.apis.ollamaUrl,
          onChange: e => updateSetting('apis', 'ollamaUrl', e.target.value),
          placeholder: "http://localhost:11434"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 781,
          columnNumber: 11
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("button", {
          onClick: () => testConnection('ollama'),
          className: `test-btn ${testResults['ollama'] || ''}`,
          disabled: testResults['ollama'] === 'testing',
          children: testResults['ollama'] === 'testing' ? 'Testing...' : 'Test'
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 787,
          columnNumber: 11
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 780,
        columnNumber: 9
      }, undefined), testResults['ollama_details'] && /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
        className: `test-result ${testResults['ollama']}`,
        children: testResults['ollama_details']
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 796,
        columnNumber: 11
      }, undefined)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 778,
      columnNumber: 7
    }, undefined)]
  }, void 0, true, {
    fileName: _jsxFileName,
    lineNumber: 727,
    columnNumber: 5
  }, undefined);
  const renderLocalLLMSettings = () => {
    // Safety check for profiles structure
    if (!settings.localLLM.profiles || !settings.localLLM.profiles.low || !settings.localLLM.profiles.mid) {
      return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
        className: "settings-section",
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("h3", {
          children: "Local LLM Configuration"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 809,
          columnNumber: 11
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          className: "error-message",
          children: "Loading Local LLM settings... Please refresh if this persists."
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 810,
          columnNumber: 11
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 808,
        columnNumber: 9
      }, undefined);
    }
    return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
      className: "settings-section",
      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("h3", {
        children: "Local LLM Configuration"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 819,
        columnNumber: 7
      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
        className: "setting-group",
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("label", {
          className: "checkbox-label",
          children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("input", {
            type: "checkbox",
            checked: settings.localLLM.enabled,
            onChange: e => updateSetting('localLLM', 'enabled', e.target.checked)
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 823,
            columnNumber: 11
          }, undefined), "Enable Local LLM"]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 822,
          columnNumber: 9
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          className: "setting-description",
          children: "Enable local language model integration for offline AI capabilities"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 830,
          columnNumber: 9
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 821,
        columnNumber: 7
      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
        className: "setting-group",
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("label", {
          children: "Provider"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 836,
          columnNumber: 9
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("select", {
          value: settings.localLLM.provider,
          onChange: e => updateSetting('localLLM', 'provider', e.target.value),
          disabled: !settings.localLLM.enabled,
          children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("option", {
            value: "ollama",
            children: "Ollama"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 842,
            columnNumber: 11
          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("option", {
            value: "lm-studio",
            children: "LM Studio"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 843,
            columnNumber: 11
          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("option", {
            value: "text-generation-webui",
            children: "Text Generation WebUI"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 844,
            columnNumber: 11
          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("option", {
            value: "custom",
            children: "Custom Endpoint"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 845,
            columnNumber: 11
          }, undefined)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 837,
          columnNumber: 9
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 835,
        columnNumber: 7
      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
        className: "setting-group",
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("label", {
          children: "Endpoint URL"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 850,
          columnNumber: 9
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          className: "input-with-test",
          children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("input", {
            type: "text",
            value: settings.localLLM.endpoint,
            onChange: e => updateSetting('localLLM', 'endpoint', e.target.value),
            placeholder: "http://localhost:11434",
            disabled: !settings.localLLM.enabled
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 852,
            columnNumber: 11
          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("button", {
            onClick: () => testConnection('local-llm'),
            className: `test-btn ${testResults['local-llm'] || ''}`,
            disabled: testResults['local-llm'] === 'testing' || !settings.localLLM.enabled,
            children: testResults['local-llm'] === 'testing' ? 'Testing...' : 'Test'
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 859,
            columnNumber: 11
          }, undefined)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 851,
          columnNumber: 9
        }, undefined), testResults['local-llm_details'] && /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          className: `test-result ${testResults['local-llm']}`,
          children: testResults['local-llm_details']
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 868,
          columnNumber: 11
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 849,
        columnNumber: 7
      }, undefined), renderSystemRecommendations(), renderWebSocketFallback(), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
        className: "setting-group",
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("label", {
          className: "checkbox-label",
          children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("input", {
            type: "checkbox",
            checked: settings.localLLM.dualLLMMode,
            onChange: e => updateSetting('localLLM', 'dualLLMMode', e.target.checked),
            disabled: !settings.localLLM.enabled
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 880,
            columnNumber: 11
          }, undefined), "Enable Dual LLM Mode"]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 879,
          columnNumber: 9
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          className: "setting-description",
          children: "Use two different models for different complexity levels and roles"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 888,
          columnNumber: 9
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 878,
        columnNumber: 7
      }, undefined), settings.localLLM.dualLLMMode && /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, {
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          className: "llm-profile-section",
          children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("h4", {
            children: "Low Profile LLM (2-3B Parameters)"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 897,
            columnNumber: 13
          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
            className: "profile-badge low",
            children: "Fast \u2022 Efficient \u2022 Routing"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 898,
            columnNumber: 13
          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
            className: "setting-group",
            children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("label", {
              className: "checkbox-label",
              children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("input", {
                type: "checkbox",
                checked: settings.localLLM.profiles.low.enabled,
                onChange: e => updateSetting('localLLM', 'profiles', {
                  ...settings.localLLM.profiles,
                  low: {
                    ...settings.localLLM.profiles.low,
                    enabled: e.target.checked
                  }
                }),
                disabled: !settings.localLLM.enabled
              }, void 0, false, {
                fileName: _jsxFileName,
                lineNumber: 902,
                columnNumber: 17
              }, undefined), "Enable Low Profile Model"]
            }, void 0, true, {
              fileName: _jsxFileName,
              lineNumber: 901,
              columnNumber: 15
            }, undefined)
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 900,
            columnNumber: 13
          }, undefined), renderModelDropdown(settings.localLLM.profiles.low, 'low'), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
            className: "setting-group",
            children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("label", {
              children: "Temperature"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 918,
              columnNumber: 15
            }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("input", {
              type: "range",
              min: "0",
              max: "1",
              step: "0.1",
              value: settings.localLLM.profiles.low.temperature,
              onChange: e => updateSetting('localLLM', 'profiles', {
                ...settings.localLLM.profiles,
                low: {
                  ...settings.localLLM.profiles.low,
                  temperature: parseFloat(e.target.value)
                }
              }),
              disabled: !settings.localLLM.enabled || !settings.localLLM.profiles.low.enabled
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 919,
              columnNumber: 15
            }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("span", {
              className: "slider-value",
              children: settings.localLLM.profiles.low.temperature
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 931,
              columnNumber: 15
            }, undefined)]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 917,
            columnNumber: 13
          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
            className: "setting-group",
            children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("label", {
              children: "Context Length"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 935,
              columnNumber: 15
            }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("input", {
              type: "number",
              value: settings.localLLM.profiles.low.contextLength,
              onChange: e => updateSetting('localLLM', 'profiles', {
                ...settings.localLLM.profiles,
                low: {
                  ...settings.localLLM.profiles.low,
                  contextLength: parseInt(e.target.value)
                }
              }),
              min: "1024",
              max: "32768",
              disabled: !settings.localLLM.enabled || !settings.localLLM.profiles.low.enabled
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 936,
              columnNumber: 15
            }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
              className: "setting-description",
              children: "Smaller context window for efficiency"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 947,
              columnNumber: 15
            }, undefined)]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 934,
            columnNumber: 13
          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
            className: "setting-group",
            children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("label", {
              children: "Assigned Roles"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 953,
              columnNumber: 15
            }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
              className: "role-tags",
              children: settings.localLLM.profiles.low.roles.map(role => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("span", {
                className: "role-tag low",
                children: role
              }, role, false, {
                fileName: _jsxFileName,
                lineNumber: 956,
                columnNumber: 19
              }, undefined))
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 954,
              columnNumber: 15
            }, undefined)]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 952,
            columnNumber: 13
          }, undefined)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 896,
          columnNumber: 11
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          className: "llm-profile-section",
          children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("h4", {
            children: "Mid Profile LLM (7-9B Parameters)"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 964,
            columnNumber: 13
          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
            className: "profile-badge mid",
            children: "Balanced \u2022 Capable \u2022 Reasoning"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 965,
            columnNumber: 13
          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
            className: "setting-group",
            children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("label", {
              className: "checkbox-label",
              children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("input", {
                type: "checkbox",
                checked: settings.localLLM.profiles.mid.enabled,
                onChange: e => updateSetting('localLLM', 'profiles', {
                  ...settings.localLLM.profiles,
                  mid: {
                    ...settings.localLLM.profiles.mid,
                    enabled: e.target.checked
                  }
                }),
                disabled: !settings.localLLM.enabled
              }, void 0, false, {
                fileName: _jsxFileName,
                lineNumber: 969,
                columnNumber: 17
              }, undefined), "Enable Mid Profile Model"]
            }, void 0, true, {
              fileName: _jsxFileName,
              lineNumber: 968,
              columnNumber: 15
            }, undefined)
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 967,
            columnNumber: 13
          }, undefined), renderModelDropdown(settings.localLLM.profiles.mid, 'mid'), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
            className: "setting-group",
            children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("label", {
              children: "Temperature"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 985,
              columnNumber: 15
            }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("input", {
              type: "range",
              min: "0",
              max: "1",
              step: "0.1",
              value: settings.localLLM.profiles.mid.temperature,
              onChange: e => updateSetting('localLLM', 'profiles', {
                ...settings.localLLM.profiles,
                mid: {
                  ...settings.localLLM.profiles.mid,
                  temperature: parseFloat(e.target.value)
                }
              }),
              disabled: !settings.localLLM.enabled || !settings.localLLM.profiles.mid.enabled
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 986,
              columnNumber: 15
            }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("span", {
              className: "slider-value",
              children: settings.localLLM.profiles.mid.temperature
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 998,
              columnNumber: 15
            }, undefined)]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 984,
            columnNumber: 13
          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
            className: "setting-group",
            children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("label", {
              children: "Context Length"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 1002,
              columnNumber: 15
            }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("input", {
              type: "number",
              value: settings.localLLM.profiles.mid.contextLength,
              onChange: e => updateSetting('localLLM', 'profiles', {
                ...settings.localLLM.profiles,
                mid: {
                  ...settings.localLLM.profiles.mid,
                  contextLength: parseInt(e.target.value)
                }
              }),
              min: "1024",
              max: "131072",
              disabled: !settings.localLLM.enabled || !settings.localLLM.profiles.mid.enabled
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 1003,
              columnNumber: 15
            }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
              className: "setting-description",
              children: "Larger context window for complex reasoning"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 1014,
              columnNumber: 15
            }, undefined)]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 1001,
            columnNumber: 13
          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
            className: "setting-group",
            children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("label", {
              children: "Assigned Roles"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 1020,
              columnNumber: 15
            }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
              className: "role-tags",
              children: settings.localLLM.profiles.mid.roles.map(role => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("span", {
                className: "role-tag mid",
                children: role
              }, role, false, {
                fileName: _jsxFileName,
                lineNumber: 1023,
                columnNumber: 19
              }, undefined))
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 1021,
              columnNumber: 15
            }, undefined)]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 1019,
            columnNumber: 13
          }, undefined)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 963,
          columnNumber: 11
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          className: "role-assignment-section",
          children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("h4", {
            children: "Role Assignment"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 1031,
            columnNumber: 13
          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
            className: "setting-description",
            children: "Assign specific roles to different LLM profiles for optimal performance"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 1032,
            columnNumber: 13
          }, undefined), Object.entries(settings.localLLM.roleAssignments).map(([role, assignedProfile]) => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
            className: "role-assignment",
            title: `${role} is currently assigned to ${assignedProfile} profile`,
            children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("span", {
              className: "role-name",
              children: role.replace('_', ' ')
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 1038,
              columnNumber: 17
            }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("select", {
              value: assignedProfile,
              onChange: e => updateSetting('localLLM', 'roleAssignments', {
                ...settings.localLLM.roleAssignments,
                [role]: e.target.value
              }),
              disabled: !settings.localLLM.enabled,
              className: "role-select",
              children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("option", {
                value: "low",
                children: "Low Profile"
              }, void 0, false, {
                fileName: _jsxFileName,
                lineNumber: 1048,
                columnNumber: 19
              }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("option", {
                value: "mid",
                children: "Mid Profile"
              }, void 0, false, {
                fileName: _jsxFileName,
                lineNumber: 1049,
                columnNumber: 19
              }, undefined)]
            }, void 0, true, {
              fileName: _jsxFileName,
              lineNumber: 1039,
              columnNumber: 17
            }, undefined)]
          }, role, true, {
            fileName: _jsxFileName,
            lineNumber: 1037,
            columnNumber: 15
          }, undefined))]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 1030,
          columnNumber: 11
        }, undefined)]
      }, void 0, true), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
        className: "setting-group",
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("label", {
          className: "checkbox-label",
          children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("input", {
            type: "checkbox",
            checked: settings.localLLM.streaming,
            onChange: e => updateSetting('localLLM', 'streaming', e.target.checked),
            disabled: !settings.localLLM.enabled
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 1059,
            columnNumber: 11
          }, undefined), "Enable Streaming"]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 1058,
          columnNumber: 9
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          className: "setting-description",
          children: "Stream responses in real-time for better user experience"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 1067,
          columnNumber: 9
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 1057,
        columnNumber: 7
      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
        className: "setting-group",
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("label", {
          className: "checkbox-label",
          children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("input", {
            type: "checkbox",
            checked: settings.localLLM.autoStart,
            onChange: e => updateSetting('localLLM', 'autoStart', e.target.checked),
            disabled: !settings.localLLM.enabled
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 1074,
            columnNumber: 11
          }, undefined), "Auto-start Service"]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 1073,
          columnNumber: 9
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          className: "setting-description",
          children: "Automatically start the local LLM service when Hearthlink launches"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 1082,
          columnNumber: 9
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 1072,
        columnNumber: 7
      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
        className: "setting-group",
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("label", {
          className: "checkbox-label",
          children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("input", {
            type: "checkbox",
            checked: settings.localLLM.fallbackEnabled,
            onChange: e => updateSetting('localLLM', 'fallbackEnabled', e.target.checked),
            disabled: !settings.localLLM.enabled
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 1089,
            columnNumber: 11
          }, undefined), "Enable Fallback"]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 1088,
          columnNumber: 9
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          className: "setting-description",
          children: "Fallback to other backends if local LLM fails"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 1097,
          columnNumber: 9
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 1087,
        columnNumber: 7
      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
        className: "setting-group",
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("label", {
          children: "Health Check Interval (ms)"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 1103,
          columnNumber: 9
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("input", {
          type: "number",
          value: settings.localLLM.healthCheckInterval,
          onChange: e => updateSetting('localLLM', 'healthCheckInterval', parseInt(e.target.value)),
          min: "5000",
          max: "300000",
          disabled: !settings.localLLM.enabled
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 1104,
          columnNumber: 9
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          className: "setting-description",
          children: "How often to check local LLM service health"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 1112,
          columnNumber: 9
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 1102,
        columnNumber: 7
      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
        className: "setting-group",
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("label", {
          children: "Service Status"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 1118,
          columnNumber: 9
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          className: "service-status",
          children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
            className: `status-indicator ${serviceStatus.isRunning ? 'running' : 'stopped'}`,
            children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
              className: "status-dot"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 1121,
              columnNumber: 13
            }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("span", {
              className: "status-text",
              children: serviceStatus.isRunning ? 'Running' : 'Stopped'
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 1122,
              columnNumber: 13
            }, undefined), serviceStatus.lastCheck && /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("span", {
              className: "status-timestamp",
              children: ["Last checked: ", new Date(serviceStatus.lastCheck).toLocaleTimeString()]
            }, void 0, true, {
              fileName: _jsxFileName,
              lineNumber: 1126,
              columnNumber: 15
            }, undefined)]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 1120,
            columnNumber: 11
          }, undefined), serviceStatus.error && /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
            className: "status-error",
            children: serviceStatus.error
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 1132,
            columnNumber: 13
          }, undefined)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 1119,
          columnNumber: 9
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          className: "action-buttons",
          children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("button", {
            onClick: () => startLocalLLMService(),
            className: "action-btn primary",
            disabled: !settings.localLLM.enabled,
            children: "Start Service"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 1138,
            columnNumber: 11
          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("button", {
            onClick: () => stopLocalLLMService(),
            className: "action-btn secondary",
            disabled: !settings.localLLM.enabled,
            children: "Stop Service"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 1145,
            columnNumber: 11
          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("button", {
            onClick: () => restartLocalLLMService(),
            className: "action-btn warning",
            disabled: !settings.localLLM.enabled,
            children: "Restart Service"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 1152,
            columnNumber: 11
          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("button", {
            onClick: () => checkServiceStatus(),
            className: "action-btn info",
            disabled: !settings.localLLM.enabled,
            children: "Check Status"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 1159,
            columnNumber: 11
          }, undefined)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 1137,
          columnNumber: 9
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 1117,
        columnNumber: 7
      }, undefined)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 818,
      columnNumber: 5
    }, undefined);
  };
  const renderVoiceSettings = () => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
    className: "settings-section",
    children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("h3", {
      children: "Voice Configuration"
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 1174,
      columnNumber: 7
    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
      className: "setting-group",
      children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("label", {
        className: "checkbox-label",
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("input", {
          type: "checkbox",
          checked: settings.voice.enabled,
          onChange: e => updateSetting('voice', 'enabled', e.target.checked)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 1178,
          columnNumber: 11
        }, undefined), "Voice interface enabled"]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 1177,
        columnNumber: 9
      }, undefined)
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 1176,
      columnNumber: 7
    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
      className: "setting-group",
      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("label", {
        children: "Voice Sensitivity"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 1188,
        columnNumber: 9
      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("input", {
        type: "range",
        min: "0.1",
        max: "1.0",
        step: "0.1",
        value: settings.voice.sensitivity,
        onChange: e => updateSetting('voice', 'sensitivity', parseFloat(e.target.value))
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 1189,
        columnNumber: 9
      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("span", {
        className: "range-value",
        children: settings.voice.sensitivity
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 1197,
        columnNumber: 9
      }, undefined)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 1187,
      columnNumber: 7
    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
      className: "setting-group",
      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("label", {
        children: "Wake Word"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 1201,
        columnNumber: 9
      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("input", {
        type: "text",
        value: settings.voice.wakeWord,
        onChange: e => updateSetting('voice', 'wakeWord', e.target.value),
        placeholder: "alden"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 1202,
        columnNumber: 9
      }, undefined)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 1200,
      columnNumber: 7
    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
      className: "setting-group",
      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("label", {
        children: "Routing Mode"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 1211,
        columnNumber: 9
      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("select", {
        value: settings.voice.routingMode,
        onChange: e => updateSetting('voice', 'routingMode', e.target.value),
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("option", {
          value: "smart",
          children: "Smart Routing"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 1216,
          columnNumber: 11
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("option", {
          value: "manual",
          children: "Manual Selection"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 1217,
          columnNumber: 11
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("option", {
          value: "direct",
          children: "Direct Command"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 1218,
          columnNumber: 11
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 1212,
        columnNumber: 9
      }, undefined)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 1210,
      columnNumber: 7
    }, undefined)]
  }, void 0, true, {
    fileName: _jsxFileName,
    lineNumber: 1173,
    columnNumber: 5
  }, undefined);
  const renderSecuritySettings = () => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
    className: "settings-section",
    children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("h3", {
      children: "Security Settings"
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 1226,
      columnNumber: 7
    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
      className: "setting-group",
      children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("label", {
        className: "checkbox-label",
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("input", {
          type: "checkbox",
          checked: settings.security.encryptionEnabled,
          onChange: e => updateSetting('security', 'encryptionEnabled', e.target.checked)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 1230,
          columnNumber: 11
        }, undefined), "Enable data encryption"]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 1229,
        columnNumber: 9
      }, undefined)
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 1228,
      columnNumber: 7
    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
      className: "setting-group",
      children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("label", {
        className: "checkbox-label",
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("input", {
          type: "checkbox",
          checked: settings.security.auditLogging,
          onChange: e => updateSetting('security', 'auditLogging', e.target.checked)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 1241,
          columnNumber: 11
        }, undefined), "Enable audit logging"]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 1240,
        columnNumber: 9
      }, undefined)
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 1239,
      columnNumber: 7
    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
      className: "setting-group",
      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("label", {
        children: "Session Timeout (minutes)"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 1251,
        columnNumber: 9
      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("input", {
        type: "number",
        min: "5",
        max: "480",
        value: settings.security.sessionTimeout,
        onChange: e => updateSetting('security', 'sessionTimeout', parseInt(e.target.value))
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 1252,
        columnNumber: 9
      }, undefined)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 1250,
      columnNumber: 7
    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
      className: "setting-group",
      children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("label", {
        className: "checkbox-label",
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("input", {
          type: "checkbox",
          checked: settings.security.autoLock,
          onChange: e => updateSetting('security', 'autoLock', e.target.checked)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 1263,
          columnNumber: 11
        }, undefined), "Auto-lock on idle"]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 1262,
        columnNumber: 9
      }, undefined)
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 1261,
      columnNumber: 7
    }, undefined)]
  }, void 0, true, {
    fileName: _jsxFileName,
    lineNumber: 1225,
    columnNumber: 5
  }, undefined);
  const renderAgentPersonaSettings = () => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
    className: "settings-section",
    children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("h3", {
      children: "Agent Persona Management"
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 1276,
      columnNumber: 7
    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
      className: "setting-description",
      children: "Configure and customize agent personas for different interaction styles and capabilities."
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 1277,
      columnNumber: 7
    }, undefined), Object.entries(settings.agents).map(([agentId, agent]) => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
      className: "agent-persona-card",
      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
        className: "agent-header",
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          className: "agent-info",
          children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("h4", {
            className: "agent-name",
            children: agentId.charAt(0).toUpperCase() + agentId.slice(1)
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 1285,
            columnNumber: 15
          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
            className: "agent-status",
            children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("span", {
              className: `status-indicator ${agent.enabled ? 'enabled' : 'disabled'}`,
              children: agent.enabled ? 'Active' : 'Disabled'
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 1287,
              columnNumber: 17
            }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("span", {
              className: "agent-priority",
              children: ["Priority: ", agent.priority]
            }, void 0, true, {
              fileName: _jsxFileName,
              lineNumber: 1290,
              columnNumber: 17
            }, undefined)]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 1286,
            columnNumber: 15
          }, undefined)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 1284,
          columnNumber: 13
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          className: "agent-controls",
          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("label", {
            className: "checkbox-label",
            children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("input", {
              type: "checkbox",
              checked: agent.enabled,
              onChange: e => updateSetting('agents', agentId, {
                ...agent,
                enabled: e.target.checked
              })
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 1295,
              columnNumber: 17
            }, undefined), "Enable"]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 1294,
            columnNumber: 15
          }, undefined)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 1293,
          columnNumber: 13
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 1283,
        columnNumber: 11
      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
        className: "agent-prompt-section",
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("label", {
          children: "Agent Persona Prompt"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 1309,
          columnNumber: 13
        }, undefined), agent.isDynamic ? /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          className: "dynamic-prompt-notice",
          children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
            className: "notice-icon",
            children: "\uD83D\uDD04"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 1312,
            columnNumber: 17
          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
            className: "notice-content",
            children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("strong", {
              children: "Dynamic Agent"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 1314,
              columnNumber: 19
            }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("p", {
              children: "Mimic adapts its persona based on context and user needs. The prompt is generated dynamically during interactions."
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 1315,
              columnNumber: 19
            }, undefined)]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 1313,
            columnNumber: 17
          }, undefined)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 1311,
          columnNumber: 15
        }, undefined) : agent.isHardCoded ? /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          className: "hardcoded-prompt-notice",
          children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
            className: "notice-icon",
            children: "\uD83D\uDD12"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 1320,
            columnNumber: 17
          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
            className: "notice-content",
            children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("strong", {
              children: "Hard-Coded Agent"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 1322,
              columnNumber: 19
            }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("p", {
              children: "Sentry's persona is optimized for system monitoring and security. The prompt is hard-coded for maximum effectiveness."
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 1323,
              columnNumber: 19
            }, undefined)]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 1321,
            columnNumber: 17
          }, undefined)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 1319,
          columnNumber: 15
        }, undefined) : /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("textarea", {
          value: agent.prompt,
          onChange: e => updateSetting('agents', agentId, {
            ...agent,
            prompt: e.target.value
          }),
          rows: "4",
          className: "prompt-textarea",
          placeholder: "Enter the persona prompt for this agent..."
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 1327,
          columnNumber: 15
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 1308,
        columnNumber: 11
      }, undefined), (agentId === 'alden' || agentId === 'alice') && /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
        className: "prompt-actions",
        children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("button", {
          onClick: () => updateSetting('agents', agentId, {
            ...agent,
            prompt: getDefaultPrompt(agentId)
          }),
          className: "action-btn secondary",
          children: "Reset to Default"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 1342,
          columnNumber: 15
        }, undefined)
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 1341,
        columnNumber: 13
      }, undefined)]
    }, agentId, true, {
      fileName: _jsxFileName,
      lineNumber: 1282,
      columnNumber: 9
    }, undefined))]
  }, void 0, true, {
    fileName: _jsxFileName,
    lineNumber: 1275,
    columnNumber: 5
  }, undefined);
  const tabs = [{
    id: 'general',
    label: 'General',
    component: renderGeneralSettings
  }, {
    id: 'localLLM',
    label: 'Local LLM',
    component: renderLocalLLMSettings
  }, {
    id: 'agents',
    label: 'Agent Personas',
    component: renderAgentPersonaSettings
  }, {
    id: 'voice',
    label: 'Voice',
    component: renderVoiceSettings
  }, {
    id: 'security',
    label: 'Security',
    component: renderSecuritySettings
  }];
  if (!isVisible) return null;
  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
    className: "settings-overlay",
    children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
      className: "settings-modal",
      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
        className: "settings-header",
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("h2", {
          children: "HEARTHLINK SETTINGS"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 1372,
          columnNumber: 11
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("button", {
          className: "close-btn",
          onClick: onClose,
          children: "\u2715"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 1373,
          columnNumber: 11
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 1371,
        columnNumber: 9
      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
        className: "settings-content",
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          className: "settings-tabs",
          children: tabs.map(tab => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("button", {
            className: `tab-btn ${activeTab === tab.id ? 'active' : ''}`,
            onClick: () => setActiveTab(tab.id),
            children: tab.label
          }, tab.id, false, {
            fileName: _jsxFileName,
            lineNumber: 1379,
            columnNumber: 15
          }, undefined))
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 1377,
          columnNumber: 11
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          className: "settings-panel",
          children: (_tabs$find = tabs.find(tab => tab.id === activeTab)) === null || _tabs$find === void 0 ? void 0 : _tabs$find.component()
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 1389,
          columnNumber: 11
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 1376,
        columnNumber: 9
      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
        className: "settings-footer",
        children: [error && /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          className: "error-message",
          children: error
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 1395,
          columnNumber: 21
        }, undefined), successMessage && /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          className: "success-message",
          children: successMessage
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 1396,
          columnNumber: 30
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          className: "settings-actions",
          children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("button", {
            className: "cancel-btn",
            onClick: onClose,
            children: "Cancel"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 1398,
            columnNumber: 13
          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("button", {
            className: "save-btn",
            onClick: e => {
              e.preventDefault();
              e.stopPropagation();
              saveSettings();
            },
            disabled: saving,
            children: saving ? 'Saving...' : 'Save Settings'
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 1399,
            columnNumber: 13
          }, undefined)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 1397,
          columnNumber: 11
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 1394,
        columnNumber: 9
      }, undefined)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 1370,
      columnNumber: 7
    }, undefined)
  }, void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 1369,
    columnNumber: 5
  }, undefined);
};
_s(SettingsManager, "Cx7wt5jAcSiRXIImUOSsJhhCTh4=");
_c = SettingsManager;
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SettingsManager);
var _c;
__webpack_require__.$Refresh$.register(_c, "SettingsManager");

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("df7040b71ed830b15485")
/******/ })();
/******/ 
/******/ }
);
//# sourceMappingURL=main.57a262785c2d3822b539.hot-update.js.map