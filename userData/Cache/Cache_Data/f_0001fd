"use strict";
globalThis["webpackHotUpdateHearthlink"]("main",{

/***/ "./src/components/SuperClaudeInterface.js":
/*!************************************************!*\
  !*** ./src/components/SuperClaudeInterface.js ***!
  \************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _SuperClaudeInterface_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SuperClaudeInterface.css */ "./src/components/SuperClaudeInterface.css");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "G:\\mythologiq\\hearthlink\\src\\components\\SuperClaudeInterface.js",
  _s = __webpack_require__.$Refresh$.signature();



const SuperClaudeInterface = ({
  isVisible,
  onClose
}) => {
  _s();
  const [messages, setMessages] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [inputValue, setInputValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [reasoning_mode, setReasoningMode] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('balanced');
  const [tools_enabled, setToolsEnabled] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const [session_id, setSessionId] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);
  const [connection_status, setConnectionStatus] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('disconnected');
  const [backend_mode, setBackendMode] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('claude_code_cli');
  const messagesEndRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const reasoning_modes = [{
    mode: 'fast',
    label: 'Fast',
    description: 'Quick responses'
  }, {
    mode: 'balanced',
    label: 'Balanced',
    description: 'Optimal balance'
  }, {
    mode: 'deep',
    label: 'Deep',
    description: 'Thorough analysis'
  }, {
    mode: 'creative',
    label: 'Creative',
    description: 'Creative exploration'
  }];
  const available_tools = [{
    id: 'code_interpreter',
    label: 'Code Interpreter',
    icon: '💻'
  }, {
    id: 'file_manager',
    label: 'File Manager',
    icon: '📁'
  }, {
    id: 'data_analysis',
    label: 'Data Analysis',
    icon: '📊'
  }, {
    id: 'web_search',
    label: 'Web Search',
    icon: '🔍'
  }];
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (isVisible) {
      initializeSession();
      checkConnectionStatus();
    }
  }, [isVisible]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    scrollToBottom();
  }, [messages]);
  const scrollToBottom = () => {
    var _messagesEndRef$curre;
    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({
      behavior: 'smooth'
    });
  };
  const initializeSession = async () => {
    try {
      const response = await fetch('http://localhost:8005/api/superclaude/session', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          reasoning_mode,
          tools_enabled,
          backend_preference: backend_mode
        })
      });
      if (response.ok) {
        const data = await response.json();
        setSessionId(data.session_id);
        setConnectionStatus('connected');
        addSystemMessage(`SuperClaude session initialized (${data.backend_used})`);
      } else {
        setConnectionStatus('error');
        addSystemMessage('Failed to initialize SuperClaude session');
      }
    } catch (error) {
      setConnectionStatus('error');
      addSystemMessage(`Connection error: ${error.message}`);
    }
  };
  const checkConnectionStatus = async () => {
    try {
      const response = await fetch('/api/superclaude/status');
      const data = await response.json();
      setConnectionStatus(data.status);
      setBackendMode(data.current_backend);
    } catch (error) {
      setConnectionStatus('error');
    }
  };
  const addSystemMessage = content => {
    const message = {
      id: Date.now(),
      type: 'system',
      content,
      timestamp: new Date().toLocaleTimeString()
    };
    setMessages(prev => [...prev, message]);
  };
  const addUserMessage = content => {
    const message = {
      id: Date.now(),
      type: 'user',
      content,
      timestamp: new Date().toLocaleTimeString(),
      reasoning_mode,
      tools_enabled: [...tools_enabled]
    };
    setMessages(prev => [...prev, message]);
  };
  const addAssistantMessage = (content, metadata = {}) => {
    const message = {
      id: Date.now(),
      type: 'assistant',
      content,
      timestamp: new Date().toLocaleTimeString(),
      metadata
    };
    setMessages(prev => [...prev, message]);
  };
  const sendMessage = async () => {
    if (!inputValue.trim() || isLoading || !session_id) return;
    const userMessage = inputValue;
    addUserMessage(userMessage);
    setInputValue('');
    setIsLoading(true);
    try {
      const response = await fetch('/api/superclaude/chat', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          session_id,
          message: userMessage,
          reasoning_mode,
          tools_enabled,
          context: {
            hearthlink_ecosystem: true,
            alice_insights: true,
            mimic_personas: true
          }
        })
      });
      if (response.ok) {
        const data = await response.json();
        addAssistantMessage(data.response, {
          reasoning_chain: data.reasoning_chain,
          tools_used: data.tools_used,
          backend_used: data.backend_used,
          response_time: data.response_time,
          token_usage: data.token_usage
        });
      } else {
        const error = await response.json();
        addSystemMessage(`Error: ${error.message}`);
      }
    } catch (error) {
      addSystemMessage(`Request failed: ${error.message}`);
    } finally {
      setIsLoading(false);
    }
  };
  const handleKeyPress = e => {
    if (e.key === 'Enter' && !e.shiftKey) {
      e.preventDefault();
      sendMessage();
    }
  };
  const toggleTool = toolId => {
    setToolsEnabled(prev => prev.includes(toolId) ? prev.filter(id => id !== toolId) : [...prev, toolId]);
  };
  const clearConversation = () => {
    setMessages([]);
    initializeSession();
  };
  if (!isVisible) return null;
  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
    className: "superclaude-overlay",
    children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
      className: "superclaude-modal",
      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
        className: "superclaude-header",
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          className: "header-left",
          children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("h2", {
            children: "\uD83E\uDDE0 SuperClaude Advanced AI"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 187,
            columnNumber: 13
          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
            className: `connection-status ${connection_status}`,
            children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("span", {
              className: "status-dot"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 189,
              columnNumber: 15
            }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("span", {
              className: "status-text",
              children: [connection_status === 'connected' && `Connected (${backend_mode})`, connection_status === 'disconnected' && 'Disconnected', connection_status === 'error' && 'Connection Error']
            }, void 0, true, {
              fileName: _jsxFileName,
              lineNumber: 190,
              columnNumber: 15
            }, undefined)]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 188,
            columnNumber: 13
          }, undefined)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 186,
          columnNumber: 11
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("button", {
          className: "close-btn",
          onClick: onClose,
          children: "\xD7"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 197,
          columnNumber: 11
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 185,
        columnNumber: 9
      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
        className: "superclaude-controls",
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          className: "reasoning-modes",
          children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("label", {
            children: "Reasoning Mode:"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 202,
            columnNumber: 13
          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("select", {
            value: reasoning_mode,
            onChange: e => setReasoningMode(e.target.value),
            disabled: isLoading,
            children: reasoning_modes.map(mode => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("option", {
              value: mode.mode,
              children: [mode.label, " - ", mode.description]
            }, mode.mode, true, {
              fileName: _jsxFileName,
              lineNumber: 209,
              columnNumber: 17
            }, undefined))
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 203,
            columnNumber: 13
          }, undefined)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 201,
          columnNumber: 11
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          className: "tools-section",
          children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("label", {
            children: "Tools:"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 217,
            columnNumber: 13
          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
            className: "tools-grid",
            children: available_tools.map(tool => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("button", {
              className: `tool-btn ${tools_enabled.includes(tool.id) ? 'active' : ''}`,
              onClick: () => toggleTool(tool.id),
              disabled: isLoading,
              title: tool.label,
              children: [tool.icon, " ", tool.label]
            }, tool.id, true, {
              fileName: _jsxFileName,
              lineNumber: 220,
              columnNumber: 17
            }, undefined))
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 218,
            columnNumber: 13
          }, undefined)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 216,
          columnNumber: 11
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          className: "session-controls",
          children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("button", {
            className: "clear-btn",
            onClick: clearConversation,
            disabled: isLoading,
            children: "\uD83D\uDDD1\uFE0F Clear"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 234,
            columnNumber: 13
          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("button", {
            className: "reconnect-btn",
            onClick: initializeSession,
            disabled: isLoading,
            children: "\uD83D\uDD04 Reconnect"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 241,
            columnNumber: 13
          }, undefined)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 233,
          columnNumber: 11
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 200,
        columnNumber: 9
      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
        className: "superclaude-messages",
        children: [messages.map(message => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          className: `message ${message.type}`,
          children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
            className: "message-header",
            children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("span", {
              className: "message-type",
              children: [message.type === 'user' && '👤 You', message.type === 'assistant' && '🧠 SuperClaude', message.type === 'system' && '⚙️ System']
            }, void 0, true, {
              fileName: _jsxFileName,
              lineNumber: 255,
              columnNumber: 17
            }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("span", {
              className: "message-time",
              children: message.timestamp
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 260,
              columnNumber: 17
            }, undefined), message.reasoning_mode && /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("span", {
              className: "reasoning-mode-badge",
              children: message.reasoning_mode
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 262,
              columnNumber: 19
            }, undefined)]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 254,
            columnNumber: 15
          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
            className: "message-content",
            children: message.content
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 265,
            columnNumber: 15
          }, undefined), message.metadata && /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
            className: "message-metadata",
            children: [message.metadata.reasoning_chain && /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
              className: "reasoning-chain",
              children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("strong", {
                children: "Reasoning:"
              }, void 0, false, {
                fileName: _jsxFileName,
                lineNumber: 272,
                columnNumber: 23
              }, undefined), " ", message.metadata.reasoning_chain]
            }, void 0, true, {
              fileName: _jsxFileName,
              lineNumber: 271,
              columnNumber: 21
            }, undefined), message.metadata.tools_used && message.metadata.tools_used.length > 0 && /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
              className: "tools-used",
              children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("strong", {
                children: "Tools Used:"
              }, void 0, false, {
                fileName: _jsxFileName,
                lineNumber: 277,
                columnNumber: 23
              }, undefined), " ", message.metadata.tools_used.join(', ')]
            }, void 0, true, {
              fileName: _jsxFileName,
              lineNumber: 276,
              columnNumber: 21
            }, undefined), message.metadata.token_usage && /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
              className: "token-usage",
              children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("strong", {
                children: "Tokens:"
              }, void 0, false, {
                fileName: _jsxFileName,
                lineNumber: 282,
                columnNumber: 23
              }, undefined), " ", message.metadata.token_usage.total]
            }, void 0, true, {
              fileName: _jsxFileName,
              lineNumber: 281,
              columnNumber: 21
            }, undefined)]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 269,
            columnNumber: 17
          }, undefined)]
        }, message.id, true, {
          fileName: _jsxFileName,
          lineNumber: 253,
          columnNumber: 13
        }, undefined)), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          ref: messagesEndRef
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 289,
          columnNumber: 11
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 251,
        columnNumber: 9
      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
        className: "superclaude-input",
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("textarea", {
          value: inputValue,
          onChange: e => setInputValue(e.target.value),
          onKeyPress: handleKeyPress,
          placeholder: "Ask SuperClaude anything... (Shift+Enter for new line)",
          disabled: isLoading || connection_status !== 'connected',
          rows: "3"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 293,
          columnNumber: 11
        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("button", {
          className: "send-btn",
          onClick: sendMessage,
          disabled: isLoading || !inputValue.trim() || connection_status !== 'connected',
          children: [isLoading ? '⏳' : '🚀', " Send"]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 301,
          columnNumber: 11
        }, undefined)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 292,
        columnNumber: 9
      }, undefined)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 184,
      columnNumber: 7
    }, undefined)
  }, void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 183,
    columnNumber: 5
  }, undefined);
};
_s(SuperClaudeInterface, "jKTtxC2/TDnaYxlntdgT9URYDCU=");
_c = SuperClaudeInterface;
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SuperClaudeInterface);
var _c;
__webpack_require__.$Refresh$.register(_c, "SuperClaudeInterface");

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("df3016978aa44e7e8f3f")
/******/ })();
/******/ 
/******/ }
);
//# sourceMappingURL=main.b7e90c40957844ecbde7.hot-update.js.map